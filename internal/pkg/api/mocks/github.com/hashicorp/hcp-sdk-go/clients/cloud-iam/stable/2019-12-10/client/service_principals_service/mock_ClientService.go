// Code generated by mockery. DO NOT EDIT.

package mock_service_principals_service

import (
	runtime "github.com/go-openapi/runtime"
	mock "github.com/stretchr/testify/mock"

	service_principals_service "github.com/hashicorp/hcp-sdk-go/clients/cloud-iam/stable/2019-12-10/client/service_principals_service"
)

// MockClientService is an autogenerated mock type for the ClientService type
type MockClientService struct {
	mock.Mock
}

type MockClientService_Expecter struct {
	mock *mock.Mock
}

func (_m *MockClientService) EXPECT() *MockClientService_Expecter {
	return &MockClientService_Expecter{mock: &_m.Mock}
}

// ServicePrincipalsServiceCreateOrganizationServicePrincipal provides a mock function with given fields: params, authInfo, opts
func (_m *MockClientService) ServicePrincipalsServiceCreateOrganizationServicePrincipal(params *service_principals_service.ServicePrincipalsServiceCreateOrganizationServicePrincipalParams, authInfo runtime.ClientAuthInfoWriter, opts ...service_principals_service.ClientOption) (*service_principals_service.ServicePrincipalsServiceCreateOrganizationServicePrincipalOK, error) {
	_va := make([]interface{}, len(opts))
	for _i := range opts {
		_va[_i] = opts[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, params, authInfo)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for ServicePrincipalsServiceCreateOrganizationServicePrincipal")
	}

	var r0 *service_principals_service.ServicePrincipalsServiceCreateOrganizationServicePrincipalOK
	var r1 error
	if rf, ok := ret.Get(0).(func(*service_principals_service.ServicePrincipalsServiceCreateOrganizationServicePrincipalParams, runtime.ClientAuthInfoWriter, ...service_principals_service.ClientOption) (*service_principals_service.ServicePrincipalsServiceCreateOrganizationServicePrincipalOK, error)); ok {
		return rf(params, authInfo, opts...)
	}
	if rf, ok := ret.Get(0).(func(*service_principals_service.ServicePrincipalsServiceCreateOrganizationServicePrincipalParams, runtime.ClientAuthInfoWriter, ...service_principals_service.ClientOption) *service_principals_service.ServicePrincipalsServiceCreateOrganizationServicePrincipalOK); ok {
		r0 = rf(params, authInfo, opts...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*service_principals_service.ServicePrincipalsServiceCreateOrganizationServicePrincipalOK)
		}
	}

	if rf, ok := ret.Get(1).(func(*service_principals_service.ServicePrincipalsServiceCreateOrganizationServicePrincipalParams, runtime.ClientAuthInfoWriter, ...service_principals_service.ClientOption) error); ok {
		r1 = rf(params, authInfo, opts...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// MockClientService_ServicePrincipalsServiceCreateOrganizationServicePrincipal_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ServicePrincipalsServiceCreateOrganizationServicePrincipal'
type MockClientService_ServicePrincipalsServiceCreateOrganizationServicePrincipal_Call struct {
	*mock.Call
}

// ServicePrincipalsServiceCreateOrganizationServicePrincipal is a helper method to define mock.On call
//   - params *service_principals_service.ServicePrincipalsServiceCreateOrganizationServicePrincipalParams
//   - authInfo runtime.ClientAuthInfoWriter
//   - opts ...service_principals_service.ClientOption
func (_e *MockClientService_Expecter) ServicePrincipalsServiceCreateOrganizationServicePrincipal(params interface{}, authInfo interface{}, opts ...interface{}) *MockClientService_ServicePrincipalsServiceCreateOrganizationServicePrincipal_Call {
	return &MockClientService_ServicePrincipalsServiceCreateOrganizationServicePrincipal_Call{Call: _e.mock.On("ServicePrincipalsServiceCreateOrganizationServicePrincipal",
		append([]interface{}{params, authInfo}, opts...)...)}
}

func (_c *MockClientService_ServicePrincipalsServiceCreateOrganizationServicePrincipal_Call) Run(run func(params *service_principals_service.ServicePrincipalsServiceCreateOrganizationServicePrincipalParams, authInfo runtime.ClientAuthInfoWriter, opts ...service_principals_service.ClientOption)) *MockClientService_ServicePrincipalsServiceCreateOrganizationServicePrincipal_Call {
	_c.Call.Run(func(args mock.Arguments) {
		variadicArgs := make([]service_principals_service.ClientOption, len(args)-2)
		for i, a := range args[2:] {
			if a != nil {
				variadicArgs[i] = a.(service_principals_service.ClientOption)
			}
		}
		run(args[0].(*service_principals_service.ServicePrincipalsServiceCreateOrganizationServicePrincipalParams), args[1].(runtime.ClientAuthInfoWriter), variadicArgs...)
	})
	return _c
}

func (_c *MockClientService_ServicePrincipalsServiceCreateOrganizationServicePrincipal_Call) Return(_a0 *service_principals_service.ServicePrincipalsServiceCreateOrganizationServicePrincipalOK, _a1 error) *MockClientService_ServicePrincipalsServiceCreateOrganizationServicePrincipal_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockClientService_ServicePrincipalsServiceCreateOrganizationServicePrincipal_Call) RunAndReturn(run func(*service_principals_service.ServicePrincipalsServiceCreateOrganizationServicePrincipalParams, runtime.ClientAuthInfoWriter, ...service_principals_service.ClientOption) (*service_principals_service.ServicePrincipalsServiceCreateOrganizationServicePrincipalOK, error)) *MockClientService_ServicePrincipalsServiceCreateOrganizationServicePrincipal_Call {
	_c.Call.Return(run)
	return _c
}

// ServicePrincipalsServiceCreateOrganizationServicePrincipalKey provides a mock function with given fields: params, authInfo, opts
func (_m *MockClientService) ServicePrincipalsServiceCreateOrganizationServicePrincipalKey(params *service_principals_service.ServicePrincipalsServiceCreateOrganizationServicePrincipalKeyParams, authInfo runtime.ClientAuthInfoWriter, opts ...service_principals_service.ClientOption) (*service_principals_service.ServicePrincipalsServiceCreateOrganizationServicePrincipalKeyOK, error) {
	_va := make([]interface{}, len(opts))
	for _i := range opts {
		_va[_i] = opts[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, params, authInfo)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for ServicePrincipalsServiceCreateOrganizationServicePrincipalKey")
	}

	var r0 *service_principals_service.ServicePrincipalsServiceCreateOrganizationServicePrincipalKeyOK
	var r1 error
	if rf, ok := ret.Get(0).(func(*service_principals_service.ServicePrincipalsServiceCreateOrganizationServicePrincipalKeyParams, runtime.ClientAuthInfoWriter, ...service_principals_service.ClientOption) (*service_principals_service.ServicePrincipalsServiceCreateOrganizationServicePrincipalKeyOK, error)); ok {
		return rf(params, authInfo, opts...)
	}
	if rf, ok := ret.Get(0).(func(*service_principals_service.ServicePrincipalsServiceCreateOrganizationServicePrincipalKeyParams, runtime.ClientAuthInfoWriter, ...service_principals_service.ClientOption) *service_principals_service.ServicePrincipalsServiceCreateOrganizationServicePrincipalKeyOK); ok {
		r0 = rf(params, authInfo, opts...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*service_principals_service.ServicePrincipalsServiceCreateOrganizationServicePrincipalKeyOK)
		}
	}

	if rf, ok := ret.Get(1).(func(*service_principals_service.ServicePrincipalsServiceCreateOrganizationServicePrincipalKeyParams, runtime.ClientAuthInfoWriter, ...service_principals_service.ClientOption) error); ok {
		r1 = rf(params, authInfo, opts...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// MockClientService_ServicePrincipalsServiceCreateOrganizationServicePrincipalKey_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ServicePrincipalsServiceCreateOrganizationServicePrincipalKey'
type MockClientService_ServicePrincipalsServiceCreateOrganizationServicePrincipalKey_Call struct {
	*mock.Call
}

// ServicePrincipalsServiceCreateOrganizationServicePrincipalKey is a helper method to define mock.On call
//   - params *service_principals_service.ServicePrincipalsServiceCreateOrganizationServicePrincipalKeyParams
//   - authInfo runtime.ClientAuthInfoWriter
//   - opts ...service_principals_service.ClientOption
func (_e *MockClientService_Expecter) ServicePrincipalsServiceCreateOrganizationServicePrincipalKey(params interface{}, authInfo interface{}, opts ...interface{}) *MockClientService_ServicePrincipalsServiceCreateOrganizationServicePrincipalKey_Call {
	return &MockClientService_ServicePrincipalsServiceCreateOrganizationServicePrincipalKey_Call{Call: _e.mock.On("ServicePrincipalsServiceCreateOrganizationServicePrincipalKey",
		append([]interface{}{params, authInfo}, opts...)...)}
}

func (_c *MockClientService_ServicePrincipalsServiceCreateOrganizationServicePrincipalKey_Call) Run(run func(params *service_principals_service.ServicePrincipalsServiceCreateOrganizationServicePrincipalKeyParams, authInfo runtime.ClientAuthInfoWriter, opts ...service_principals_service.ClientOption)) *MockClientService_ServicePrincipalsServiceCreateOrganizationServicePrincipalKey_Call {
	_c.Call.Run(func(args mock.Arguments) {
		variadicArgs := make([]service_principals_service.ClientOption, len(args)-2)
		for i, a := range args[2:] {
			if a != nil {
				variadicArgs[i] = a.(service_principals_service.ClientOption)
			}
		}
		run(args[0].(*service_principals_service.ServicePrincipalsServiceCreateOrganizationServicePrincipalKeyParams), args[1].(runtime.ClientAuthInfoWriter), variadicArgs...)
	})
	return _c
}

func (_c *MockClientService_ServicePrincipalsServiceCreateOrganizationServicePrincipalKey_Call) Return(_a0 *service_principals_service.ServicePrincipalsServiceCreateOrganizationServicePrincipalKeyOK, _a1 error) *MockClientService_ServicePrincipalsServiceCreateOrganizationServicePrincipalKey_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockClientService_ServicePrincipalsServiceCreateOrganizationServicePrincipalKey_Call) RunAndReturn(run func(*service_principals_service.ServicePrincipalsServiceCreateOrganizationServicePrincipalKeyParams, runtime.ClientAuthInfoWriter, ...service_principals_service.ClientOption) (*service_principals_service.ServicePrincipalsServiceCreateOrganizationServicePrincipalKeyOK, error)) *MockClientService_ServicePrincipalsServiceCreateOrganizationServicePrincipalKey_Call {
	_c.Call.Return(run)
	return _c
}

// ServicePrincipalsServiceCreateProjectServicePrincipal provides a mock function with given fields: params, authInfo, opts
func (_m *MockClientService) ServicePrincipalsServiceCreateProjectServicePrincipal(params *service_principals_service.ServicePrincipalsServiceCreateProjectServicePrincipalParams, authInfo runtime.ClientAuthInfoWriter, opts ...service_principals_service.ClientOption) (*service_principals_service.ServicePrincipalsServiceCreateProjectServicePrincipalOK, error) {
	_va := make([]interface{}, len(opts))
	for _i := range opts {
		_va[_i] = opts[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, params, authInfo)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for ServicePrincipalsServiceCreateProjectServicePrincipal")
	}

	var r0 *service_principals_service.ServicePrincipalsServiceCreateProjectServicePrincipalOK
	var r1 error
	if rf, ok := ret.Get(0).(func(*service_principals_service.ServicePrincipalsServiceCreateProjectServicePrincipalParams, runtime.ClientAuthInfoWriter, ...service_principals_service.ClientOption) (*service_principals_service.ServicePrincipalsServiceCreateProjectServicePrincipalOK, error)); ok {
		return rf(params, authInfo, opts...)
	}
	if rf, ok := ret.Get(0).(func(*service_principals_service.ServicePrincipalsServiceCreateProjectServicePrincipalParams, runtime.ClientAuthInfoWriter, ...service_principals_service.ClientOption) *service_principals_service.ServicePrincipalsServiceCreateProjectServicePrincipalOK); ok {
		r0 = rf(params, authInfo, opts...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*service_principals_service.ServicePrincipalsServiceCreateProjectServicePrincipalOK)
		}
	}

	if rf, ok := ret.Get(1).(func(*service_principals_service.ServicePrincipalsServiceCreateProjectServicePrincipalParams, runtime.ClientAuthInfoWriter, ...service_principals_service.ClientOption) error); ok {
		r1 = rf(params, authInfo, opts...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// MockClientService_ServicePrincipalsServiceCreateProjectServicePrincipal_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ServicePrincipalsServiceCreateProjectServicePrincipal'
type MockClientService_ServicePrincipalsServiceCreateProjectServicePrincipal_Call struct {
	*mock.Call
}

// ServicePrincipalsServiceCreateProjectServicePrincipal is a helper method to define mock.On call
//   - params *service_principals_service.ServicePrincipalsServiceCreateProjectServicePrincipalParams
//   - authInfo runtime.ClientAuthInfoWriter
//   - opts ...service_principals_service.ClientOption
func (_e *MockClientService_Expecter) ServicePrincipalsServiceCreateProjectServicePrincipal(params interface{}, authInfo interface{}, opts ...interface{}) *MockClientService_ServicePrincipalsServiceCreateProjectServicePrincipal_Call {
	return &MockClientService_ServicePrincipalsServiceCreateProjectServicePrincipal_Call{Call: _e.mock.On("ServicePrincipalsServiceCreateProjectServicePrincipal",
		append([]interface{}{params, authInfo}, opts...)...)}
}

func (_c *MockClientService_ServicePrincipalsServiceCreateProjectServicePrincipal_Call) Run(run func(params *service_principals_service.ServicePrincipalsServiceCreateProjectServicePrincipalParams, authInfo runtime.ClientAuthInfoWriter, opts ...service_principals_service.ClientOption)) *MockClientService_ServicePrincipalsServiceCreateProjectServicePrincipal_Call {
	_c.Call.Run(func(args mock.Arguments) {
		variadicArgs := make([]service_principals_service.ClientOption, len(args)-2)
		for i, a := range args[2:] {
			if a != nil {
				variadicArgs[i] = a.(service_principals_service.ClientOption)
			}
		}
		run(args[0].(*service_principals_service.ServicePrincipalsServiceCreateProjectServicePrincipalParams), args[1].(runtime.ClientAuthInfoWriter), variadicArgs...)
	})
	return _c
}

func (_c *MockClientService_ServicePrincipalsServiceCreateProjectServicePrincipal_Call) Return(_a0 *service_principals_service.ServicePrincipalsServiceCreateProjectServicePrincipalOK, _a1 error) *MockClientService_ServicePrincipalsServiceCreateProjectServicePrincipal_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockClientService_ServicePrincipalsServiceCreateProjectServicePrincipal_Call) RunAndReturn(run func(*service_principals_service.ServicePrincipalsServiceCreateProjectServicePrincipalParams, runtime.ClientAuthInfoWriter, ...service_principals_service.ClientOption) (*service_principals_service.ServicePrincipalsServiceCreateProjectServicePrincipalOK, error)) *MockClientService_ServicePrincipalsServiceCreateProjectServicePrincipal_Call {
	_c.Call.Return(run)
	return _c
}

// ServicePrincipalsServiceCreateProjectServicePrincipalKey provides a mock function with given fields: params, authInfo, opts
func (_m *MockClientService) ServicePrincipalsServiceCreateProjectServicePrincipalKey(params *service_principals_service.ServicePrincipalsServiceCreateProjectServicePrincipalKeyParams, authInfo runtime.ClientAuthInfoWriter, opts ...service_principals_service.ClientOption) (*service_principals_service.ServicePrincipalsServiceCreateProjectServicePrincipalKeyOK, error) {
	_va := make([]interface{}, len(opts))
	for _i := range opts {
		_va[_i] = opts[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, params, authInfo)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for ServicePrincipalsServiceCreateProjectServicePrincipalKey")
	}

	var r0 *service_principals_service.ServicePrincipalsServiceCreateProjectServicePrincipalKeyOK
	var r1 error
	if rf, ok := ret.Get(0).(func(*service_principals_service.ServicePrincipalsServiceCreateProjectServicePrincipalKeyParams, runtime.ClientAuthInfoWriter, ...service_principals_service.ClientOption) (*service_principals_service.ServicePrincipalsServiceCreateProjectServicePrincipalKeyOK, error)); ok {
		return rf(params, authInfo, opts...)
	}
	if rf, ok := ret.Get(0).(func(*service_principals_service.ServicePrincipalsServiceCreateProjectServicePrincipalKeyParams, runtime.ClientAuthInfoWriter, ...service_principals_service.ClientOption) *service_principals_service.ServicePrincipalsServiceCreateProjectServicePrincipalKeyOK); ok {
		r0 = rf(params, authInfo, opts...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*service_principals_service.ServicePrincipalsServiceCreateProjectServicePrincipalKeyOK)
		}
	}

	if rf, ok := ret.Get(1).(func(*service_principals_service.ServicePrincipalsServiceCreateProjectServicePrincipalKeyParams, runtime.ClientAuthInfoWriter, ...service_principals_service.ClientOption) error); ok {
		r1 = rf(params, authInfo, opts...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// MockClientService_ServicePrincipalsServiceCreateProjectServicePrincipalKey_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ServicePrincipalsServiceCreateProjectServicePrincipalKey'
type MockClientService_ServicePrincipalsServiceCreateProjectServicePrincipalKey_Call struct {
	*mock.Call
}

// ServicePrincipalsServiceCreateProjectServicePrincipalKey is a helper method to define mock.On call
//   - params *service_principals_service.ServicePrincipalsServiceCreateProjectServicePrincipalKeyParams
//   - authInfo runtime.ClientAuthInfoWriter
//   - opts ...service_principals_service.ClientOption
func (_e *MockClientService_Expecter) ServicePrincipalsServiceCreateProjectServicePrincipalKey(params interface{}, authInfo interface{}, opts ...interface{}) *MockClientService_ServicePrincipalsServiceCreateProjectServicePrincipalKey_Call {
	return &MockClientService_ServicePrincipalsServiceCreateProjectServicePrincipalKey_Call{Call: _e.mock.On("ServicePrincipalsServiceCreateProjectServicePrincipalKey",
		append([]interface{}{params, authInfo}, opts...)...)}
}

func (_c *MockClientService_ServicePrincipalsServiceCreateProjectServicePrincipalKey_Call) Run(run func(params *service_principals_service.ServicePrincipalsServiceCreateProjectServicePrincipalKeyParams, authInfo runtime.ClientAuthInfoWriter, opts ...service_principals_service.ClientOption)) *MockClientService_ServicePrincipalsServiceCreateProjectServicePrincipalKey_Call {
	_c.Call.Run(func(args mock.Arguments) {
		variadicArgs := make([]service_principals_service.ClientOption, len(args)-2)
		for i, a := range args[2:] {
			if a != nil {
				variadicArgs[i] = a.(service_principals_service.ClientOption)
			}
		}
		run(args[0].(*service_principals_service.ServicePrincipalsServiceCreateProjectServicePrincipalKeyParams), args[1].(runtime.ClientAuthInfoWriter), variadicArgs...)
	})
	return _c
}

func (_c *MockClientService_ServicePrincipalsServiceCreateProjectServicePrincipalKey_Call) Return(_a0 *service_principals_service.ServicePrincipalsServiceCreateProjectServicePrincipalKeyOK, _a1 error) *MockClientService_ServicePrincipalsServiceCreateProjectServicePrincipalKey_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockClientService_ServicePrincipalsServiceCreateProjectServicePrincipalKey_Call) RunAndReturn(run func(*service_principals_service.ServicePrincipalsServiceCreateProjectServicePrincipalKeyParams, runtime.ClientAuthInfoWriter, ...service_principals_service.ClientOption) (*service_principals_service.ServicePrincipalsServiceCreateProjectServicePrincipalKeyOK, error)) *MockClientService_ServicePrincipalsServiceCreateProjectServicePrincipalKey_Call {
	_c.Call.Return(run)
	return _c
}

// ServicePrincipalsServiceCreateServicePrincipal provides a mock function with given fields: params, authInfo, opts
func (_m *MockClientService) ServicePrincipalsServiceCreateServicePrincipal(params *service_principals_service.ServicePrincipalsServiceCreateServicePrincipalParams, authInfo runtime.ClientAuthInfoWriter, opts ...service_principals_service.ClientOption) (*service_principals_service.ServicePrincipalsServiceCreateServicePrincipalOK, error) {
	_va := make([]interface{}, len(opts))
	for _i := range opts {
		_va[_i] = opts[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, params, authInfo)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for ServicePrincipalsServiceCreateServicePrincipal")
	}

	var r0 *service_principals_service.ServicePrincipalsServiceCreateServicePrincipalOK
	var r1 error
	if rf, ok := ret.Get(0).(func(*service_principals_service.ServicePrincipalsServiceCreateServicePrincipalParams, runtime.ClientAuthInfoWriter, ...service_principals_service.ClientOption) (*service_principals_service.ServicePrincipalsServiceCreateServicePrincipalOK, error)); ok {
		return rf(params, authInfo, opts...)
	}
	if rf, ok := ret.Get(0).(func(*service_principals_service.ServicePrincipalsServiceCreateServicePrincipalParams, runtime.ClientAuthInfoWriter, ...service_principals_service.ClientOption) *service_principals_service.ServicePrincipalsServiceCreateServicePrincipalOK); ok {
		r0 = rf(params, authInfo, opts...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*service_principals_service.ServicePrincipalsServiceCreateServicePrincipalOK)
		}
	}

	if rf, ok := ret.Get(1).(func(*service_principals_service.ServicePrincipalsServiceCreateServicePrincipalParams, runtime.ClientAuthInfoWriter, ...service_principals_service.ClientOption) error); ok {
		r1 = rf(params, authInfo, opts...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// MockClientService_ServicePrincipalsServiceCreateServicePrincipal_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ServicePrincipalsServiceCreateServicePrincipal'
type MockClientService_ServicePrincipalsServiceCreateServicePrincipal_Call struct {
	*mock.Call
}

// ServicePrincipalsServiceCreateServicePrincipal is a helper method to define mock.On call
//   - params *service_principals_service.ServicePrincipalsServiceCreateServicePrincipalParams
//   - authInfo runtime.ClientAuthInfoWriter
//   - opts ...service_principals_service.ClientOption
func (_e *MockClientService_Expecter) ServicePrincipalsServiceCreateServicePrincipal(params interface{}, authInfo interface{}, opts ...interface{}) *MockClientService_ServicePrincipalsServiceCreateServicePrincipal_Call {
	return &MockClientService_ServicePrincipalsServiceCreateServicePrincipal_Call{Call: _e.mock.On("ServicePrincipalsServiceCreateServicePrincipal",
		append([]interface{}{params, authInfo}, opts...)...)}
}

func (_c *MockClientService_ServicePrincipalsServiceCreateServicePrincipal_Call) Run(run func(params *service_principals_service.ServicePrincipalsServiceCreateServicePrincipalParams, authInfo runtime.ClientAuthInfoWriter, opts ...service_principals_service.ClientOption)) *MockClientService_ServicePrincipalsServiceCreateServicePrincipal_Call {
	_c.Call.Run(func(args mock.Arguments) {
		variadicArgs := make([]service_principals_service.ClientOption, len(args)-2)
		for i, a := range args[2:] {
			if a != nil {
				variadicArgs[i] = a.(service_principals_service.ClientOption)
			}
		}
		run(args[0].(*service_principals_service.ServicePrincipalsServiceCreateServicePrincipalParams), args[1].(runtime.ClientAuthInfoWriter), variadicArgs...)
	})
	return _c
}

func (_c *MockClientService_ServicePrincipalsServiceCreateServicePrincipal_Call) Return(_a0 *service_principals_service.ServicePrincipalsServiceCreateServicePrincipalOK, _a1 error) *MockClientService_ServicePrincipalsServiceCreateServicePrincipal_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockClientService_ServicePrincipalsServiceCreateServicePrincipal_Call) RunAndReturn(run func(*service_principals_service.ServicePrincipalsServiceCreateServicePrincipalParams, runtime.ClientAuthInfoWriter, ...service_principals_service.ClientOption) (*service_principals_service.ServicePrincipalsServiceCreateServicePrincipalOK, error)) *MockClientService_ServicePrincipalsServiceCreateServicePrincipal_Call {
	_c.Call.Return(run)
	return _c
}

// ServicePrincipalsServiceCreateServicePrincipal2 provides a mock function with given fields: params, authInfo, opts
func (_m *MockClientService) ServicePrincipalsServiceCreateServicePrincipal2(params *service_principals_service.ServicePrincipalsServiceCreateServicePrincipal2Params, authInfo runtime.ClientAuthInfoWriter, opts ...service_principals_service.ClientOption) (*service_principals_service.ServicePrincipalsServiceCreateServicePrincipal2OK, error) {
	_va := make([]interface{}, len(opts))
	for _i := range opts {
		_va[_i] = opts[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, params, authInfo)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for ServicePrincipalsServiceCreateServicePrincipal2")
	}

	var r0 *service_principals_service.ServicePrincipalsServiceCreateServicePrincipal2OK
	var r1 error
	if rf, ok := ret.Get(0).(func(*service_principals_service.ServicePrincipalsServiceCreateServicePrincipal2Params, runtime.ClientAuthInfoWriter, ...service_principals_service.ClientOption) (*service_principals_service.ServicePrincipalsServiceCreateServicePrincipal2OK, error)); ok {
		return rf(params, authInfo, opts...)
	}
	if rf, ok := ret.Get(0).(func(*service_principals_service.ServicePrincipalsServiceCreateServicePrincipal2Params, runtime.ClientAuthInfoWriter, ...service_principals_service.ClientOption) *service_principals_service.ServicePrincipalsServiceCreateServicePrincipal2OK); ok {
		r0 = rf(params, authInfo, opts...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*service_principals_service.ServicePrincipalsServiceCreateServicePrincipal2OK)
		}
	}

	if rf, ok := ret.Get(1).(func(*service_principals_service.ServicePrincipalsServiceCreateServicePrincipal2Params, runtime.ClientAuthInfoWriter, ...service_principals_service.ClientOption) error); ok {
		r1 = rf(params, authInfo, opts...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// MockClientService_ServicePrincipalsServiceCreateServicePrincipal2_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ServicePrincipalsServiceCreateServicePrincipal2'
type MockClientService_ServicePrincipalsServiceCreateServicePrincipal2_Call struct {
	*mock.Call
}

// ServicePrincipalsServiceCreateServicePrincipal2 is a helper method to define mock.On call
//   - params *service_principals_service.ServicePrincipalsServiceCreateServicePrincipal2Params
//   - authInfo runtime.ClientAuthInfoWriter
//   - opts ...service_principals_service.ClientOption
func (_e *MockClientService_Expecter) ServicePrincipalsServiceCreateServicePrincipal2(params interface{}, authInfo interface{}, opts ...interface{}) *MockClientService_ServicePrincipalsServiceCreateServicePrincipal2_Call {
	return &MockClientService_ServicePrincipalsServiceCreateServicePrincipal2_Call{Call: _e.mock.On("ServicePrincipalsServiceCreateServicePrincipal2",
		append([]interface{}{params, authInfo}, opts...)...)}
}

func (_c *MockClientService_ServicePrincipalsServiceCreateServicePrincipal2_Call) Run(run func(params *service_principals_service.ServicePrincipalsServiceCreateServicePrincipal2Params, authInfo runtime.ClientAuthInfoWriter, opts ...service_principals_service.ClientOption)) *MockClientService_ServicePrincipalsServiceCreateServicePrincipal2_Call {
	_c.Call.Run(func(args mock.Arguments) {
		variadicArgs := make([]service_principals_service.ClientOption, len(args)-2)
		for i, a := range args[2:] {
			if a != nil {
				variadicArgs[i] = a.(service_principals_service.ClientOption)
			}
		}
		run(args[0].(*service_principals_service.ServicePrincipalsServiceCreateServicePrincipal2Params), args[1].(runtime.ClientAuthInfoWriter), variadicArgs...)
	})
	return _c
}

func (_c *MockClientService_ServicePrincipalsServiceCreateServicePrincipal2_Call) Return(_a0 *service_principals_service.ServicePrincipalsServiceCreateServicePrincipal2OK, _a1 error) *MockClientService_ServicePrincipalsServiceCreateServicePrincipal2_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockClientService_ServicePrincipalsServiceCreateServicePrincipal2_Call) RunAndReturn(run func(*service_principals_service.ServicePrincipalsServiceCreateServicePrincipal2Params, runtime.ClientAuthInfoWriter, ...service_principals_service.ClientOption) (*service_principals_service.ServicePrincipalsServiceCreateServicePrincipal2OK, error)) *MockClientService_ServicePrincipalsServiceCreateServicePrincipal2_Call {
	_c.Call.Return(run)
	return _c
}

// ServicePrincipalsServiceCreateServicePrincipalKey provides a mock function with given fields: params, authInfo, opts
func (_m *MockClientService) ServicePrincipalsServiceCreateServicePrincipalKey(params *service_principals_service.ServicePrincipalsServiceCreateServicePrincipalKeyParams, authInfo runtime.ClientAuthInfoWriter, opts ...service_principals_service.ClientOption) (*service_principals_service.ServicePrincipalsServiceCreateServicePrincipalKeyOK, error) {
	_va := make([]interface{}, len(opts))
	for _i := range opts {
		_va[_i] = opts[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, params, authInfo)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for ServicePrincipalsServiceCreateServicePrincipalKey")
	}

	var r0 *service_principals_service.ServicePrincipalsServiceCreateServicePrincipalKeyOK
	var r1 error
	if rf, ok := ret.Get(0).(func(*service_principals_service.ServicePrincipalsServiceCreateServicePrincipalKeyParams, runtime.ClientAuthInfoWriter, ...service_principals_service.ClientOption) (*service_principals_service.ServicePrincipalsServiceCreateServicePrincipalKeyOK, error)); ok {
		return rf(params, authInfo, opts...)
	}
	if rf, ok := ret.Get(0).(func(*service_principals_service.ServicePrincipalsServiceCreateServicePrincipalKeyParams, runtime.ClientAuthInfoWriter, ...service_principals_service.ClientOption) *service_principals_service.ServicePrincipalsServiceCreateServicePrincipalKeyOK); ok {
		r0 = rf(params, authInfo, opts...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*service_principals_service.ServicePrincipalsServiceCreateServicePrincipalKeyOK)
		}
	}

	if rf, ok := ret.Get(1).(func(*service_principals_service.ServicePrincipalsServiceCreateServicePrincipalKeyParams, runtime.ClientAuthInfoWriter, ...service_principals_service.ClientOption) error); ok {
		r1 = rf(params, authInfo, opts...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// MockClientService_ServicePrincipalsServiceCreateServicePrincipalKey_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ServicePrincipalsServiceCreateServicePrincipalKey'
type MockClientService_ServicePrincipalsServiceCreateServicePrincipalKey_Call struct {
	*mock.Call
}

// ServicePrincipalsServiceCreateServicePrincipalKey is a helper method to define mock.On call
//   - params *service_principals_service.ServicePrincipalsServiceCreateServicePrincipalKeyParams
//   - authInfo runtime.ClientAuthInfoWriter
//   - opts ...service_principals_service.ClientOption
func (_e *MockClientService_Expecter) ServicePrincipalsServiceCreateServicePrincipalKey(params interface{}, authInfo interface{}, opts ...interface{}) *MockClientService_ServicePrincipalsServiceCreateServicePrincipalKey_Call {
	return &MockClientService_ServicePrincipalsServiceCreateServicePrincipalKey_Call{Call: _e.mock.On("ServicePrincipalsServiceCreateServicePrincipalKey",
		append([]interface{}{params, authInfo}, opts...)...)}
}

func (_c *MockClientService_ServicePrincipalsServiceCreateServicePrincipalKey_Call) Run(run func(params *service_principals_service.ServicePrincipalsServiceCreateServicePrincipalKeyParams, authInfo runtime.ClientAuthInfoWriter, opts ...service_principals_service.ClientOption)) *MockClientService_ServicePrincipalsServiceCreateServicePrincipalKey_Call {
	_c.Call.Run(func(args mock.Arguments) {
		variadicArgs := make([]service_principals_service.ClientOption, len(args)-2)
		for i, a := range args[2:] {
			if a != nil {
				variadicArgs[i] = a.(service_principals_service.ClientOption)
			}
		}
		run(args[0].(*service_principals_service.ServicePrincipalsServiceCreateServicePrincipalKeyParams), args[1].(runtime.ClientAuthInfoWriter), variadicArgs...)
	})
	return _c
}

func (_c *MockClientService_ServicePrincipalsServiceCreateServicePrincipalKey_Call) Return(_a0 *service_principals_service.ServicePrincipalsServiceCreateServicePrincipalKeyOK, _a1 error) *MockClientService_ServicePrincipalsServiceCreateServicePrincipalKey_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockClientService_ServicePrincipalsServiceCreateServicePrincipalKey_Call) RunAndReturn(run func(*service_principals_service.ServicePrincipalsServiceCreateServicePrincipalKeyParams, runtime.ClientAuthInfoWriter, ...service_principals_service.ClientOption) (*service_principals_service.ServicePrincipalsServiceCreateServicePrincipalKeyOK, error)) *MockClientService_ServicePrincipalsServiceCreateServicePrincipalKey_Call {
	_c.Call.Return(run)
	return _c
}

// ServicePrincipalsServiceCreateServicePrincipalKey2 provides a mock function with given fields: params, authInfo, opts
func (_m *MockClientService) ServicePrincipalsServiceCreateServicePrincipalKey2(params *service_principals_service.ServicePrincipalsServiceCreateServicePrincipalKey2Params, authInfo runtime.ClientAuthInfoWriter, opts ...service_principals_service.ClientOption) (*service_principals_service.ServicePrincipalsServiceCreateServicePrincipalKey2OK, error) {
	_va := make([]interface{}, len(opts))
	for _i := range opts {
		_va[_i] = opts[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, params, authInfo)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for ServicePrincipalsServiceCreateServicePrincipalKey2")
	}

	var r0 *service_principals_service.ServicePrincipalsServiceCreateServicePrincipalKey2OK
	var r1 error
	if rf, ok := ret.Get(0).(func(*service_principals_service.ServicePrincipalsServiceCreateServicePrincipalKey2Params, runtime.ClientAuthInfoWriter, ...service_principals_service.ClientOption) (*service_principals_service.ServicePrincipalsServiceCreateServicePrincipalKey2OK, error)); ok {
		return rf(params, authInfo, opts...)
	}
	if rf, ok := ret.Get(0).(func(*service_principals_service.ServicePrincipalsServiceCreateServicePrincipalKey2Params, runtime.ClientAuthInfoWriter, ...service_principals_service.ClientOption) *service_principals_service.ServicePrincipalsServiceCreateServicePrincipalKey2OK); ok {
		r0 = rf(params, authInfo, opts...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*service_principals_service.ServicePrincipalsServiceCreateServicePrincipalKey2OK)
		}
	}

	if rf, ok := ret.Get(1).(func(*service_principals_service.ServicePrincipalsServiceCreateServicePrincipalKey2Params, runtime.ClientAuthInfoWriter, ...service_principals_service.ClientOption) error); ok {
		r1 = rf(params, authInfo, opts...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// MockClientService_ServicePrincipalsServiceCreateServicePrincipalKey2_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ServicePrincipalsServiceCreateServicePrincipalKey2'
type MockClientService_ServicePrincipalsServiceCreateServicePrincipalKey2_Call struct {
	*mock.Call
}

// ServicePrincipalsServiceCreateServicePrincipalKey2 is a helper method to define mock.On call
//   - params *service_principals_service.ServicePrincipalsServiceCreateServicePrincipalKey2Params
//   - authInfo runtime.ClientAuthInfoWriter
//   - opts ...service_principals_service.ClientOption
func (_e *MockClientService_Expecter) ServicePrincipalsServiceCreateServicePrincipalKey2(params interface{}, authInfo interface{}, opts ...interface{}) *MockClientService_ServicePrincipalsServiceCreateServicePrincipalKey2_Call {
	return &MockClientService_ServicePrincipalsServiceCreateServicePrincipalKey2_Call{Call: _e.mock.On("ServicePrincipalsServiceCreateServicePrincipalKey2",
		append([]interface{}{params, authInfo}, opts...)...)}
}

func (_c *MockClientService_ServicePrincipalsServiceCreateServicePrincipalKey2_Call) Run(run func(params *service_principals_service.ServicePrincipalsServiceCreateServicePrincipalKey2Params, authInfo runtime.ClientAuthInfoWriter, opts ...service_principals_service.ClientOption)) *MockClientService_ServicePrincipalsServiceCreateServicePrincipalKey2_Call {
	_c.Call.Run(func(args mock.Arguments) {
		variadicArgs := make([]service_principals_service.ClientOption, len(args)-2)
		for i, a := range args[2:] {
			if a != nil {
				variadicArgs[i] = a.(service_principals_service.ClientOption)
			}
		}
		run(args[0].(*service_principals_service.ServicePrincipalsServiceCreateServicePrincipalKey2Params), args[1].(runtime.ClientAuthInfoWriter), variadicArgs...)
	})
	return _c
}

func (_c *MockClientService_ServicePrincipalsServiceCreateServicePrincipalKey2_Call) Return(_a0 *service_principals_service.ServicePrincipalsServiceCreateServicePrincipalKey2OK, _a1 error) *MockClientService_ServicePrincipalsServiceCreateServicePrincipalKey2_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockClientService_ServicePrincipalsServiceCreateServicePrincipalKey2_Call) RunAndReturn(run func(*service_principals_service.ServicePrincipalsServiceCreateServicePrincipalKey2Params, runtime.ClientAuthInfoWriter, ...service_principals_service.ClientOption) (*service_principals_service.ServicePrincipalsServiceCreateServicePrincipalKey2OK, error)) *MockClientService_ServicePrincipalsServiceCreateServicePrincipalKey2_Call {
	_c.Call.Return(run)
	return _c
}

// ServicePrincipalsServiceCreateWorkloadIdentityProvider provides a mock function with given fields: params, authInfo, opts
func (_m *MockClientService) ServicePrincipalsServiceCreateWorkloadIdentityProvider(params *service_principals_service.ServicePrincipalsServiceCreateWorkloadIdentityProviderParams, authInfo runtime.ClientAuthInfoWriter, opts ...service_principals_service.ClientOption) (*service_principals_service.ServicePrincipalsServiceCreateWorkloadIdentityProviderOK, error) {
	_va := make([]interface{}, len(opts))
	for _i := range opts {
		_va[_i] = opts[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, params, authInfo)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for ServicePrincipalsServiceCreateWorkloadIdentityProvider")
	}

	var r0 *service_principals_service.ServicePrincipalsServiceCreateWorkloadIdentityProviderOK
	var r1 error
	if rf, ok := ret.Get(0).(func(*service_principals_service.ServicePrincipalsServiceCreateWorkloadIdentityProviderParams, runtime.ClientAuthInfoWriter, ...service_principals_service.ClientOption) (*service_principals_service.ServicePrincipalsServiceCreateWorkloadIdentityProviderOK, error)); ok {
		return rf(params, authInfo, opts...)
	}
	if rf, ok := ret.Get(0).(func(*service_principals_service.ServicePrincipalsServiceCreateWorkloadIdentityProviderParams, runtime.ClientAuthInfoWriter, ...service_principals_service.ClientOption) *service_principals_service.ServicePrincipalsServiceCreateWorkloadIdentityProviderOK); ok {
		r0 = rf(params, authInfo, opts...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*service_principals_service.ServicePrincipalsServiceCreateWorkloadIdentityProviderOK)
		}
	}

	if rf, ok := ret.Get(1).(func(*service_principals_service.ServicePrincipalsServiceCreateWorkloadIdentityProviderParams, runtime.ClientAuthInfoWriter, ...service_principals_service.ClientOption) error); ok {
		r1 = rf(params, authInfo, opts...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// MockClientService_ServicePrincipalsServiceCreateWorkloadIdentityProvider_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ServicePrincipalsServiceCreateWorkloadIdentityProvider'
type MockClientService_ServicePrincipalsServiceCreateWorkloadIdentityProvider_Call struct {
	*mock.Call
}

// ServicePrincipalsServiceCreateWorkloadIdentityProvider is a helper method to define mock.On call
//   - params *service_principals_service.ServicePrincipalsServiceCreateWorkloadIdentityProviderParams
//   - authInfo runtime.ClientAuthInfoWriter
//   - opts ...service_principals_service.ClientOption
func (_e *MockClientService_Expecter) ServicePrincipalsServiceCreateWorkloadIdentityProvider(params interface{}, authInfo interface{}, opts ...interface{}) *MockClientService_ServicePrincipalsServiceCreateWorkloadIdentityProvider_Call {
	return &MockClientService_ServicePrincipalsServiceCreateWorkloadIdentityProvider_Call{Call: _e.mock.On("ServicePrincipalsServiceCreateWorkloadIdentityProvider",
		append([]interface{}{params, authInfo}, opts...)...)}
}

func (_c *MockClientService_ServicePrincipalsServiceCreateWorkloadIdentityProvider_Call) Run(run func(params *service_principals_service.ServicePrincipalsServiceCreateWorkloadIdentityProviderParams, authInfo runtime.ClientAuthInfoWriter, opts ...service_principals_service.ClientOption)) *MockClientService_ServicePrincipalsServiceCreateWorkloadIdentityProvider_Call {
	_c.Call.Run(func(args mock.Arguments) {
		variadicArgs := make([]service_principals_service.ClientOption, len(args)-2)
		for i, a := range args[2:] {
			if a != nil {
				variadicArgs[i] = a.(service_principals_service.ClientOption)
			}
		}
		run(args[0].(*service_principals_service.ServicePrincipalsServiceCreateWorkloadIdentityProviderParams), args[1].(runtime.ClientAuthInfoWriter), variadicArgs...)
	})
	return _c
}

func (_c *MockClientService_ServicePrincipalsServiceCreateWorkloadIdentityProvider_Call) Return(_a0 *service_principals_service.ServicePrincipalsServiceCreateWorkloadIdentityProviderOK, _a1 error) *MockClientService_ServicePrincipalsServiceCreateWorkloadIdentityProvider_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockClientService_ServicePrincipalsServiceCreateWorkloadIdentityProvider_Call) RunAndReturn(run func(*service_principals_service.ServicePrincipalsServiceCreateWorkloadIdentityProviderParams, runtime.ClientAuthInfoWriter, ...service_principals_service.ClientOption) (*service_principals_service.ServicePrincipalsServiceCreateWorkloadIdentityProviderOK, error)) *MockClientService_ServicePrincipalsServiceCreateWorkloadIdentityProvider_Call {
	_c.Call.Return(run)
	return _c
}

// ServicePrincipalsServiceDeleteOrganizationServicePrincipal provides a mock function with given fields: params, authInfo, opts
func (_m *MockClientService) ServicePrincipalsServiceDeleteOrganizationServicePrincipal(params *service_principals_service.ServicePrincipalsServiceDeleteOrganizationServicePrincipalParams, authInfo runtime.ClientAuthInfoWriter, opts ...service_principals_service.ClientOption) (*service_principals_service.ServicePrincipalsServiceDeleteOrganizationServicePrincipalOK, error) {
	_va := make([]interface{}, len(opts))
	for _i := range opts {
		_va[_i] = opts[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, params, authInfo)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for ServicePrincipalsServiceDeleteOrganizationServicePrincipal")
	}

	var r0 *service_principals_service.ServicePrincipalsServiceDeleteOrganizationServicePrincipalOK
	var r1 error
	if rf, ok := ret.Get(0).(func(*service_principals_service.ServicePrincipalsServiceDeleteOrganizationServicePrincipalParams, runtime.ClientAuthInfoWriter, ...service_principals_service.ClientOption) (*service_principals_service.ServicePrincipalsServiceDeleteOrganizationServicePrincipalOK, error)); ok {
		return rf(params, authInfo, opts...)
	}
	if rf, ok := ret.Get(0).(func(*service_principals_service.ServicePrincipalsServiceDeleteOrganizationServicePrincipalParams, runtime.ClientAuthInfoWriter, ...service_principals_service.ClientOption) *service_principals_service.ServicePrincipalsServiceDeleteOrganizationServicePrincipalOK); ok {
		r0 = rf(params, authInfo, opts...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*service_principals_service.ServicePrincipalsServiceDeleteOrganizationServicePrincipalOK)
		}
	}

	if rf, ok := ret.Get(1).(func(*service_principals_service.ServicePrincipalsServiceDeleteOrganizationServicePrincipalParams, runtime.ClientAuthInfoWriter, ...service_principals_service.ClientOption) error); ok {
		r1 = rf(params, authInfo, opts...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// MockClientService_ServicePrincipalsServiceDeleteOrganizationServicePrincipal_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ServicePrincipalsServiceDeleteOrganizationServicePrincipal'
type MockClientService_ServicePrincipalsServiceDeleteOrganizationServicePrincipal_Call struct {
	*mock.Call
}

// ServicePrincipalsServiceDeleteOrganizationServicePrincipal is a helper method to define mock.On call
//   - params *service_principals_service.ServicePrincipalsServiceDeleteOrganizationServicePrincipalParams
//   - authInfo runtime.ClientAuthInfoWriter
//   - opts ...service_principals_service.ClientOption
func (_e *MockClientService_Expecter) ServicePrincipalsServiceDeleteOrganizationServicePrincipal(params interface{}, authInfo interface{}, opts ...interface{}) *MockClientService_ServicePrincipalsServiceDeleteOrganizationServicePrincipal_Call {
	return &MockClientService_ServicePrincipalsServiceDeleteOrganizationServicePrincipal_Call{Call: _e.mock.On("ServicePrincipalsServiceDeleteOrganizationServicePrincipal",
		append([]interface{}{params, authInfo}, opts...)...)}
}

func (_c *MockClientService_ServicePrincipalsServiceDeleteOrganizationServicePrincipal_Call) Run(run func(params *service_principals_service.ServicePrincipalsServiceDeleteOrganizationServicePrincipalParams, authInfo runtime.ClientAuthInfoWriter, opts ...service_principals_service.ClientOption)) *MockClientService_ServicePrincipalsServiceDeleteOrganizationServicePrincipal_Call {
	_c.Call.Run(func(args mock.Arguments) {
		variadicArgs := make([]service_principals_service.ClientOption, len(args)-2)
		for i, a := range args[2:] {
			if a != nil {
				variadicArgs[i] = a.(service_principals_service.ClientOption)
			}
		}
		run(args[0].(*service_principals_service.ServicePrincipalsServiceDeleteOrganizationServicePrincipalParams), args[1].(runtime.ClientAuthInfoWriter), variadicArgs...)
	})
	return _c
}

func (_c *MockClientService_ServicePrincipalsServiceDeleteOrganizationServicePrincipal_Call) Return(_a0 *service_principals_service.ServicePrincipalsServiceDeleteOrganizationServicePrincipalOK, _a1 error) *MockClientService_ServicePrincipalsServiceDeleteOrganizationServicePrincipal_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockClientService_ServicePrincipalsServiceDeleteOrganizationServicePrincipal_Call) RunAndReturn(run func(*service_principals_service.ServicePrincipalsServiceDeleteOrganizationServicePrincipalParams, runtime.ClientAuthInfoWriter, ...service_principals_service.ClientOption) (*service_principals_service.ServicePrincipalsServiceDeleteOrganizationServicePrincipalOK, error)) *MockClientService_ServicePrincipalsServiceDeleteOrganizationServicePrincipal_Call {
	_c.Call.Return(run)
	return _c
}

// ServicePrincipalsServiceDeleteOrganizationServicePrincipalKey provides a mock function with given fields: params, authInfo, opts
func (_m *MockClientService) ServicePrincipalsServiceDeleteOrganizationServicePrincipalKey(params *service_principals_service.ServicePrincipalsServiceDeleteOrganizationServicePrincipalKeyParams, authInfo runtime.ClientAuthInfoWriter, opts ...service_principals_service.ClientOption) (*service_principals_service.ServicePrincipalsServiceDeleteOrganizationServicePrincipalKeyOK, error) {
	_va := make([]interface{}, len(opts))
	for _i := range opts {
		_va[_i] = opts[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, params, authInfo)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for ServicePrincipalsServiceDeleteOrganizationServicePrincipalKey")
	}

	var r0 *service_principals_service.ServicePrincipalsServiceDeleteOrganizationServicePrincipalKeyOK
	var r1 error
	if rf, ok := ret.Get(0).(func(*service_principals_service.ServicePrincipalsServiceDeleteOrganizationServicePrincipalKeyParams, runtime.ClientAuthInfoWriter, ...service_principals_service.ClientOption) (*service_principals_service.ServicePrincipalsServiceDeleteOrganizationServicePrincipalKeyOK, error)); ok {
		return rf(params, authInfo, opts...)
	}
	if rf, ok := ret.Get(0).(func(*service_principals_service.ServicePrincipalsServiceDeleteOrganizationServicePrincipalKeyParams, runtime.ClientAuthInfoWriter, ...service_principals_service.ClientOption) *service_principals_service.ServicePrincipalsServiceDeleteOrganizationServicePrincipalKeyOK); ok {
		r0 = rf(params, authInfo, opts...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*service_principals_service.ServicePrincipalsServiceDeleteOrganizationServicePrincipalKeyOK)
		}
	}

	if rf, ok := ret.Get(1).(func(*service_principals_service.ServicePrincipalsServiceDeleteOrganizationServicePrincipalKeyParams, runtime.ClientAuthInfoWriter, ...service_principals_service.ClientOption) error); ok {
		r1 = rf(params, authInfo, opts...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// MockClientService_ServicePrincipalsServiceDeleteOrganizationServicePrincipalKey_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ServicePrincipalsServiceDeleteOrganizationServicePrincipalKey'
type MockClientService_ServicePrincipalsServiceDeleteOrganizationServicePrincipalKey_Call struct {
	*mock.Call
}

// ServicePrincipalsServiceDeleteOrganizationServicePrincipalKey is a helper method to define mock.On call
//   - params *service_principals_service.ServicePrincipalsServiceDeleteOrganizationServicePrincipalKeyParams
//   - authInfo runtime.ClientAuthInfoWriter
//   - opts ...service_principals_service.ClientOption
func (_e *MockClientService_Expecter) ServicePrincipalsServiceDeleteOrganizationServicePrincipalKey(params interface{}, authInfo interface{}, opts ...interface{}) *MockClientService_ServicePrincipalsServiceDeleteOrganizationServicePrincipalKey_Call {
	return &MockClientService_ServicePrincipalsServiceDeleteOrganizationServicePrincipalKey_Call{Call: _e.mock.On("ServicePrincipalsServiceDeleteOrganizationServicePrincipalKey",
		append([]interface{}{params, authInfo}, opts...)...)}
}

func (_c *MockClientService_ServicePrincipalsServiceDeleteOrganizationServicePrincipalKey_Call) Run(run func(params *service_principals_service.ServicePrincipalsServiceDeleteOrganizationServicePrincipalKeyParams, authInfo runtime.ClientAuthInfoWriter, opts ...service_principals_service.ClientOption)) *MockClientService_ServicePrincipalsServiceDeleteOrganizationServicePrincipalKey_Call {
	_c.Call.Run(func(args mock.Arguments) {
		variadicArgs := make([]service_principals_service.ClientOption, len(args)-2)
		for i, a := range args[2:] {
			if a != nil {
				variadicArgs[i] = a.(service_principals_service.ClientOption)
			}
		}
		run(args[0].(*service_principals_service.ServicePrincipalsServiceDeleteOrganizationServicePrincipalKeyParams), args[1].(runtime.ClientAuthInfoWriter), variadicArgs...)
	})
	return _c
}

func (_c *MockClientService_ServicePrincipalsServiceDeleteOrganizationServicePrincipalKey_Call) Return(_a0 *service_principals_service.ServicePrincipalsServiceDeleteOrganizationServicePrincipalKeyOK, _a1 error) *MockClientService_ServicePrincipalsServiceDeleteOrganizationServicePrincipalKey_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockClientService_ServicePrincipalsServiceDeleteOrganizationServicePrincipalKey_Call) RunAndReturn(run func(*service_principals_service.ServicePrincipalsServiceDeleteOrganizationServicePrincipalKeyParams, runtime.ClientAuthInfoWriter, ...service_principals_service.ClientOption) (*service_principals_service.ServicePrincipalsServiceDeleteOrganizationServicePrincipalKeyOK, error)) *MockClientService_ServicePrincipalsServiceDeleteOrganizationServicePrincipalKey_Call {
	_c.Call.Return(run)
	return _c
}

// ServicePrincipalsServiceDeleteProjectServicePrincipal provides a mock function with given fields: params, authInfo, opts
func (_m *MockClientService) ServicePrincipalsServiceDeleteProjectServicePrincipal(params *service_principals_service.ServicePrincipalsServiceDeleteProjectServicePrincipalParams, authInfo runtime.ClientAuthInfoWriter, opts ...service_principals_service.ClientOption) (*service_principals_service.ServicePrincipalsServiceDeleteProjectServicePrincipalOK, error) {
	_va := make([]interface{}, len(opts))
	for _i := range opts {
		_va[_i] = opts[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, params, authInfo)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for ServicePrincipalsServiceDeleteProjectServicePrincipal")
	}

	var r0 *service_principals_service.ServicePrincipalsServiceDeleteProjectServicePrincipalOK
	var r1 error
	if rf, ok := ret.Get(0).(func(*service_principals_service.ServicePrincipalsServiceDeleteProjectServicePrincipalParams, runtime.ClientAuthInfoWriter, ...service_principals_service.ClientOption) (*service_principals_service.ServicePrincipalsServiceDeleteProjectServicePrincipalOK, error)); ok {
		return rf(params, authInfo, opts...)
	}
	if rf, ok := ret.Get(0).(func(*service_principals_service.ServicePrincipalsServiceDeleteProjectServicePrincipalParams, runtime.ClientAuthInfoWriter, ...service_principals_service.ClientOption) *service_principals_service.ServicePrincipalsServiceDeleteProjectServicePrincipalOK); ok {
		r0 = rf(params, authInfo, opts...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*service_principals_service.ServicePrincipalsServiceDeleteProjectServicePrincipalOK)
		}
	}

	if rf, ok := ret.Get(1).(func(*service_principals_service.ServicePrincipalsServiceDeleteProjectServicePrincipalParams, runtime.ClientAuthInfoWriter, ...service_principals_service.ClientOption) error); ok {
		r1 = rf(params, authInfo, opts...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// MockClientService_ServicePrincipalsServiceDeleteProjectServicePrincipal_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ServicePrincipalsServiceDeleteProjectServicePrincipal'
type MockClientService_ServicePrincipalsServiceDeleteProjectServicePrincipal_Call struct {
	*mock.Call
}

// ServicePrincipalsServiceDeleteProjectServicePrincipal is a helper method to define mock.On call
//   - params *service_principals_service.ServicePrincipalsServiceDeleteProjectServicePrincipalParams
//   - authInfo runtime.ClientAuthInfoWriter
//   - opts ...service_principals_service.ClientOption
func (_e *MockClientService_Expecter) ServicePrincipalsServiceDeleteProjectServicePrincipal(params interface{}, authInfo interface{}, opts ...interface{}) *MockClientService_ServicePrincipalsServiceDeleteProjectServicePrincipal_Call {
	return &MockClientService_ServicePrincipalsServiceDeleteProjectServicePrincipal_Call{Call: _e.mock.On("ServicePrincipalsServiceDeleteProjectServicePrincipal",
		append([]interface{}{params, authInfo}, opts...)...)}
}

func (_c *MockClientService_ServicePrincipalsServiceDeleteProjectServicePrincipal_Call) Run(run func(params *service_principals_service.ServicePrincipalsServiceDeleteProjectServicePrincipalParams, authInfo runtime.ClientAuthInfoWriter, opts ...service_principals_service.ClientOption)) *MockClientService_ServicePrincipalsServiceDeleteProjectServicePrincipal_Call {
	_c.Call.Run(func(args mock.Arguments) {
		variadicArgs := make([]service_principals_service.ClientOption, len(args)-2)
		for i, a := range args[2:] {
			if a != nil {
				variadicArgs[i] = a.(service_principals_service.ClientOption)
			}
		}
		run(args[0].(*service_principals_service.ServicePrincipalsServiceDeleteProjectServicePrincipalParams), args[1].(runtime.ClientAuthInfoWriter), variadicArgs...)
	})
	return _c
}

func (_c *MockClientService_ServicePrincipalsServiceDeleteProjectServicePrincipal_Call) Return(_a0 *service_principals_service.ServicePrincipalsServiceDeleteProjectServicePrincipalOK, _a1 error) *MockClientService_ServicePrincipalsServiceDeleteProjectServicePrincipal_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockClientService_ServicePrincipalsServiceDeleteProjectServicePrincipal_Call) RunAndReturn(run func(*service_principals_service.ServicePrincipalsServiceDeleteProjectServicePrincipalParams, runtime.ClientAuthInfoWriter, ...service_principals_service.ClientOption) (*service_principals_service.ServicePrincipalsServiceDeleteProjectServicePrincipalOK, error)) *MockClientService_ServicePrincipalsServiceDeleteProjectServicePrincipal_Call {
	_c.Call.Return(run)
	return _c
}

// ServicePrincipalsServiceDeleteProjectServicePrincipalKey provides a mock function with given fields: params, authInfo, opts
func (_m *MockClientService) ServicePrincipalsServiceDeleteProjectServicePrincipalKey(params *service_principals_service.ServicePrincipalsServiceDeleteProjectServicePrincipalKeyParams, authInfo runtime.ClientAuthInfoWriter, opts ...service_principals_service.ClientOption) (*service_principals_service.ServicePrincipalsServiceDeleteProjectServicePrincipalKeyOK, error) {
	_va := make([]interface{}, len(opts))
	for _i := range opts {
		_va[_i] = opts[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, params, authInfo)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for ServicePrincipalsServiceDeleteProjectServicePrincipalKey")
	}

	var r0 *service_principals_service.ServicePrincipalsServiceDeleteProjectServicePrincipalKeyOK
	var r1 error
	if rf, ok := ret.Get(0).(func(*service_principals_service.ServicePrincipalsServiceDeleteProjectServicePrincipalKeyParams, runtime.ClientAuthInfoWriter, ...service_principals_service.ClientOption) (*service_principals_service.ServicePrincipalsServiceDeleteProjectServicePrincipalKeyOK, error)); ok {
		return rf(params, authInfo, opts...)
	}
	if rf, ok := ret.Get(0).(func(*service_principals_service.ServicePrincipalsServiceDeleteProjectServicePrincipalKeyParams, runtime.ClientAuthInfoWriter, ...service_principals_service.ClientOption) *service_principals_service.ServicePrincipalsServiceDeleteProjectServicePrincipalKeyOK); ok {
		r0 = rf(params, authInfo, opts...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*service_principals_service.ServicePrincipalsServiceDeleteProjectServicePrincipalKeyOK)
		}
	}

	if rf, ok := ret.Get(1).(func(*service_principals_service.ServicePrincipalsServiceDeleteProjectServicePrincipalKeyParams, runtime.ClientAuthInfoWriter, ...service_principals_service.ClientOption) error); ok {
		r1 = rf(params, authInfo, opts...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// MockClientService_ServicePrincipalsServiceDeleteProjectServicePrincipalKey_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ServicePrincipalsServiceDeleteProjectServicePrincipalKey'
type MockClientService_ServicePrincipalsServiceDeleteProjectServicePrincipalKey_Call struct {
	*mock.Call
}

// ServicePrincipalsServiceDeleteProjectServicePrincipalKey is a helper method to define mock.On call
//   - params *service_principals_service.ServicePrincipalsServiceDeleteProjectServicePrincipalKeyParams
//   - authInfo runtime.ClientAuthInfoWriter
//   - opts ...service_principals_service.ClientOption
func (_e *MockClientService_Expecter) ServicePrincipalsServiceDeleteProjectServicePrincipalKey(params interface{}, authInfo interface{}, opts ...interface{}) *MockClientService_ServicePrincipalsServiceDeleteProjectServicePrincipalKey_Call {
	return &MockClientService_ServicePrincipalsServiceDeleteProjectServicePrincipalKey_Call{Call: _e.mock.On("ServicePrincipalsServiceDeleteProjectServicePrincipalKey",
		append([]interface{}{params, authInfo}, opts...)...)}
}

func (_c *MockClientService_ServicePrincipalsServiceDeleteProjectServicePrincipalKey_Call) Run(run func(params *service_principals_service.ServicePrincipalsServiceDeleteProjectServicePrincipalKeyParams, authInfo runtime.ClientAuthInfoWriter, opts ...service_principals_service.ClientOption)) *MockClientService_ServicePrincipalsServiceDeleteProjectServicePrincipalKey_Call {
	_c.Call.Run(func(args mock.Arguments) {
		variadicArgs := make([]service_principals_service.ClientOption, len(args)-2)
		for i, a := range args[2:] {
			if a != nil {
				variadicArgs[i] = a.(service_principals_service.ClientOption)
			}
		}
		run(args[0].(*service_principals_service.ServicePrincipalsServiceDeleteProjectServicePrincipalKeyParams), args[1].(runtime.ClientAuthInfoWriter), variadicArgs...)
	})
	return _c
}

func (_c *MockClientService_ServicePrincipalsServiceDeleteProjectServicePrincipalKey_Call) Return(_a0 *service_principals_service.ServicePrincipalsServiceDeleteProjectServicePrincipalKeyOK, _a1 error) *MockClientService_ServicePrincipalsServiceDeleteProjectServicePrincipalKey_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockClientService_ServicePrincipalsServiceDeleteProjectServicePrincipalKey_Call) RunAndReturn(run func(*service_principals_service.ServicePrincipalsServiceDeleteProjectServicePrincipalKeyParams, runtime.ClientAuthInfoWriter, ...service_principals_service.ClientOption) (*service_principals_service.ServicePrincipalsServiceDeleteProjectServicePrincipalKeyOK, error)) *MockClientService_ServicePrincipalsServiceDeleteProjectServicePrincipalKey_Call {
	_c.Call.Return(run)
	return _c
}

// ServicePrincipalsServiceDeleteServicePrincipal provides a mock function with given fields: params, authInfo, opts
func (_m *MockClientService) ServicePrincipalsServiceDeleteServicePrincipal(params *service_principals_service.ServicePrincipalsServiceDeleteServicePrincipalParams, authInfo runtime.ClientAuthInfoWriter, opts ...service_principals_service.ClientOption) (*service_principals_service.ServicePrincipalsServiceDeleteServicePrincipalOK, error) {
	_va := make([]interface{}, len(opts))
	for _i := range opts {
		_va[_i] = opts[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, params, authInfo)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for ServicePrincipalsServiceDeleteServicePrincipal")
	}

	var r0 *service_principals_service.ServicePrincipalsServiceDeleteServicePrincipalOK
	var r1 error
	if rf, ok := ret.Get(0).(func(*service_principals_service.ServicePrincipalsServiceDeleteServicePrincipalParams, runtime.ClientAuthInfoWriter, ...service_principals_service.ClientOption) (*service_principals_service.ServicePrincipalsServiceDeleteServicePrincipalOK, error)); ok {
		return rf(params, authInfo, opts...)
	}
	if rf, ok := ret.Get(0).(func(*service_principals_service.ServicePrincipalsServiceDeleteServicePrincipalParams, runtime.ClientAuthInfoWriter, ...service_principals_service.ClientOption) *service_principals_service.ServicePrincipalsServiceDeleteServicePrincipalOK); ok {
		r0 = rf(params, authInfo, opts...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*service_principals_service.ServicePrincipalsServiceDeleteServicePrincipalOK)
		}
	}

	if rf, ok := ret.Get(1).(func(*service_principals_service.ServicePrincipalsServiceDeleteServicePrincipalParams, runtime.ClientAuthInfoWriter, ...service_principals_service.ClientOption) error); ok {
		r1 = rf(params, authInfo, opts...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// MockClientService_ServicePrincipalsServiceDeleteServicePrincipal_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ServicePrincipalsServiceDeleteServicePrincipal'
type MockClientService_ServicePrincipalsServiceDeleteServicePrincipal_Call struct {
	*mock.Call
}

// ServicePrincipalsServiceDeleteServicePrincipal is a helper method to define mock.On call
//   - params *service_principals_service.ServicePrincipalsServiceDeleteServicePrincipalParams
//   - authInfo runtime.ClientAuthInfoWriter
//   - opts ...service_principals_service.ClientOption
func (_e *MockClientService_Expecter) ServicePrincipalsServiceDeleteServicePrincipal(params interface{}, authInfo interface{}, opts ...interface{}) *MockClientService_ServicePrincipalsServiceDeleteServicePrincipal_Call {
	return &MockClientService_ServicePrincipalsServiceDeleteServicePrincipal_Call{Call: _e.mock.On("ServicePrincipalsServiceDeleteServicePrincipal",
		append([]interface{}{params, authInfo}, opts...)...)}
}

func (_c *MockClientService_ServicePrincipalsServiceDeleteServicePrincipal_Call) Run(run func(params *service_principals_service.ServicePrincipalsServiceDeleteServicePrincipalParams, authInfo runtime.ClientAuthInfoWriter, opts ...service_principals_service.ClientOption)) *MockClientService_ServicePrincipalsServiceDeleteServicePrincipal_Call {
	_c.Call.Run(func(args mock.Arguments) {
		variadicArgs := make([]service_principals_service.ClientOption, len(args)-2)
		for i, a := range args[2:] {
			if a != nil {
				variadicArgs[i] = a.(service_principals_service.ClientOption)
			}
		}
		run(args[0].(*service_principals_service.ServicePrincipalsServiceDeleteServicePrincipalParams), args[1].(runtime.ClientAuthInfoWriter), variadicArgs...)
	})
	return _c
}

func (_c *MockClientService_ServicePrincipalsServiceDeleteServicePrincipal_Call) Return(_a0 *service_principals_service.ServicePrincipalsServiceDeleteServicePrincipalOK, _a1 error) *MockClientService_ServicePrincipalsServiceDeleteServicePrincipal_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockClientService_ServicePrincipalsServiceDeleteServicePrincipal_Call) RunAndReturn(run func(*service_principals_service.ServicePrincipalsServiceDeleteServicePrincipalParams, runtime.ClientAuthInfoWriter, ...service_principals_service.ClientOption) (*service_principals_service.ServicePrincipalsServiceDeleteServicePrincipalOK, error)) *MockClientService_ServicePrincipalsServiceDeleteServicePrincipal_Call {
	_c.Call.Return(run)
	return _c
}

// ServicePrincipalsServiceDeleteServicePrincipal2 provides a mock function with given fields: params, authInfo, opts
func (_m *MockClientService) ServicePrincipalsServiceDeleteServicePrincipal2(params *service_principals_service.ServicePrincipalsServiceDeleteServicePrincipal2Params, authInfo runtime.ClientAuthInfoWriter, opts ...service_principals_service.ClientOption) (*service_principals_service.ServicePrincipalsServiceDeleteServicePrincipal2OK, error) {
	_va := make([]interface{}, len(opts))
	for _i := range opts {
		_va[_i] = opts[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, params, authInfo)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for ServicePrincipalsServiceDeleteServicePrincipal2")
	}

	var r0 *service_principals_service.ServicePrincipalsServiceDeleteServicePrincipal2OK
	var r1 error
	if rf, ok := ret.Get(0).(func(*service_principals_service.ServicePrincipalsServiceDeleteServicePrincipal2Params, runtime.ClientAuthInfoWriter, ...service_principals_service.ClientOption) (*service_principals_service.ServicePrincipalsServiceDeleteServicePrincipal2OK, error)); ok {
		return rf(params, authInfo, opts...)
	}
	if rf, ok := ret.Get(0).(func(*service_principals_service.ServicePrincipalsServiceDeleteServicePrincipal2Params, runtime.ClientAuthInfoWriter, ...service_principals_service.ClientOption) *service_principals_service.ServicePrincipalsServiceDeleteServicePrincipal2OK); ok {
		r0 = rf(params, authInfo, opts...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*service_principals_service.ServicePrincipalsServiceDeleteServicePrincipal2OK)
		}
	}

	if rf, ok := ret.Get(1).(func(*service_principals_service.ServicePrincipalsServiceDeleteServicePrincipal2Params, runtime.ClientAuthInfoWriter, ...service_principals_service.ClientOption) error); ok {
		r1 = rf(params, authInfo, opts...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// MockClientService_ServicePrincipalsServiceDeleteServicePrincipal2_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ServicePrincipalsServiceDeleteServicePrincipal2'
type MockClientService_ServicePrincipalsServiceDeleteServicePrincipal2_Call struct {
	*mock.Call
}

// ServicePrincipalsServiceDeleteServicePrincipal2 is a helper method to define mock.On call
//   - params *service_principals_service.ServicePrincipalsServiceDeleteServicePrincipal2Params
//   - authInfo runtime.ClientAuthInfoWriter
//   - opts ...service_principals_service.ClientOption
func (_e *MockClientService_Expecter) ServicePrincipalsServiceDeleteServicePrincipal2(params interface{}, authInfo interface{}, opts ...interface{}) *MockClientService_ServicePrincipalsServiceDeleteServicePrincipal2_Call {
	return &MockClientService_ServicePrincipalsServiceDeleteServicePrincipal2_Call{Call: _e.mock.On("ServicePrincipalsServiceDeleteServicePrincipal2",
		append([]interface{}{params, authInfo}, opts...)...)}
}

func (_c *MockClientService_ServicePrincipalsServiceDeleteServicePrincipal2_Call) Run(run func(params *service_principals_service.ServicePrincipalsServiceDeleteServicePrincipal2Params, authInfo runtime.ClientAuthInfoWriter, opts ...service_principals_service.ClientOption)) *MockClientService_ServicePrincipalsServiceDeleteServicePrincipal2_Call {
	_c.Call.Run(func(args mock.Arguments) {
		variadicArgs := make([]service_principals_service.ClientOption, len(args)-2)
		for i, a := range args[2:] {
			if a != nil {
				variadicArgs[i] = a.(service_principals_service.ClientOption)
			}
		}
		run(args[0].(*service_principals_service.ServicePrincipalsServiceDeleteServicePrincipal2Params), args[1].(runtime.ClientAuthInfoWriter), variadicArgs...)
	})
	return _c
}

func (_c *MockClientService_ServicePrincipalsServiceDeleteServicePrincipal2_Call) Return(_a0 *service_principals_service.ServicePrincipalsServiceDeleteServicePrincipal2OK, _a1 error) *MockClientService_ServicePrincipalsServiceDeleteServicePrincipal2_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockClientService_ServicePrincipalsServiceDeleteServicePrincipal2_Call) RunAndReturn(run func(*service_principals_service.ServicePrincipalsServiceDeleteServicePrincipal2Params, runtime.ClientAuthInfoWriter, ...service_principals_service.ClientOption) (*service_principals_service.ServicePrincipalsServiceDeleteServicePrincipal2OK, error)) *MockClientService_ServicePrincipalsServiceDeleteServicePrincipal2_Call {
	_c.Call.Return(run)
	return _c
}

// ServicePrincipalsServiceDeleteServicePrincipalKey provides a mock function with given fields: params, authInfo, opts
func (_m *MockClientService) ServicePrincipalsServiceDeleteServicePrincipalKey(params *service_principals_service.ServicePrincipalsServiceDeleteServicePrincipalKeyParams, authInfo runtime.ClientAuthInfoWriter, opts ...service_principals_service.ClientOption) (*service_principals_service.ServicePrincipalsServiceDeleteServicePrincipalKeyOK, error) {
	_va := make([]interface{}, len(opts))
	for _i := range opts {
		_va[_i] = opts[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, params, authInfo)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for ServicePrincipalsServiceDeleteServicePrincipalKey")
	}

	var r0 *service_principals_service.ServicePrincipalsServiceDeleteServicePrincipalKeyOK
	var r1 error
	if rf, ok := ret.Get(0).(func(*service_principals_service.ServicePrincipalsServiceDeleteServicePrincipalKeyParams, runtime.ClientAuthInfoWriter, ...service_principals_service.ClientOption) (*service_principals_service.ServicePrincipalsServiceDeleteServicePrincipalKeyOK, error)); ok {
		return rf(params, authInfo, opts...)
	}
	if rf, ok := ret.Get(0).(func(*service_principals_service.ServicePrincipalsServiceDeleteServicePrincipalKeyParams, runtime.ClientAuthInfoWriter, ...service_principals_service.ClientOption) *service_principals_service.ServicePrincipalsServiceDeleteServicePrincipalKeyOK); ok {
		r0 = rf(params, authInfo, opts...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*service_principals_service.ServicePrincipalsServiceDeleteServicePrincipalKeyOK)
		}
	}

	if rf, ok := ret.Get(1).(func(*service_principals_service.ServicePrincipalsServiceDeleteServicePrincipalKeyParams, runtime.ClientAuthInfoWriter, ...service_principals_service.ClientOption) error); ok {
		r1 = rf(params, authInfo, opts...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// MockClientService_ServicePrincipalsServiceDeleteServicePrincipalKey_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ServicePrincipalsServiceDeleteServicePrincipalKey'
type MockClientService_ServicePrincipalsServiceDeleteServicePrincipalKey_Call struct {
	*mock.Call
}

// ServicePrincipalsServiceDeleteServicePrincipalKey is a helper method to define mock.On call
//   - params *service_principals_service.ServicePrincipalsServiceDeleteServicePrincipalKeyParams
//   - authInfo runtime.ClientAuthInfoWriter
//   - opts ...service_principals_service.ClientOption
func (_e *MockClientService_Expecter) ServicePrincipalsServiceDeleteServicePrincipalKey(params interface{}, authInfo interface{}, opts ...interface{}) *MockClientService_ServicePrincipalsServiceDeleteServicePrincipalKey_Call {
	return &MockClientService_ServicePrincipalsServiceDeleteServicePrincipalKey_Call{Call: _e.mock.On("ServicePrincipalsServiceDeleteServicePrincipalKey",
		append([]interface{}{params, authInfo}, opts...)...)}
}

func (_c *MockClientService_ServicePrincipalsServiceDeleteServicePrincipalKey_Call) Run(run func(params *service_principals_service.ServicePrincipalsServiceDeleteServicePrincipalKeyParams, authInfo runtime.ClientAuthInfoWriter, opts ...service_principals_service.ClientOption)) *MockClientService_ServicePrincipalsServiceDeleteServicePrincipalKey_Call {
	_c.Call.Run(func(args mock.Arguments) {
		variadicArgs := make([]service_principals_service.ClientOption, len(args)-2)
		for i, a := range args[2:] {
			if a != nil {
				variadicArgs[i] = a.(service_principals_service.ClientOption)
			}
		}
		run(args[0].(*service_principals_service.ServicePrincipalsServiceDeleteServicePrincipalKeyParams), args[1].(runtime.ClientAuthInfoWriter), variadicArgs...)
	})
	return _c
}

func (_c *MockClientService_ServicePrincipalsServiceDeleteServicePrincipalKey_Call) Return(_a0 *service_principals_service.ServicePrincipalsServiceDeleteServicePrincipalKeyOK, _a1 error) *MockClientService_ServicePrincipalsServiceDeleteServicePrincipalKey_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockClientService_ServicePrincipalsServiceDeleteServicePrincipalKey_Call) RunAndReturn(run func(*service_principals_service.ServicePrincipalsServiceDeleteServicePrincipalKeyParams, runtime.ClientAuthInfoWriter, ...service_principals_service.ClientOption) (*service_principals_service.ServicePrincipalsServiceDeleteServicePrincipalKeyOK, error)) *MockClientService_ServicePrincipalsServiceDeleteServicePrincipalKey_Call {
	_c.Call.Return(run)
	return _c
}

// ServicePrincipalsServiceDeleteServicePrincipalKey2 provides a mock function with given fields: params, authInfo, opts
func (_m *MockClientService) ServicePrincipalsServiceDeleteServicePrincipalKey2(params *service_principals_service.ServicePrincipalsServiceDeleteServicePrincipalKey2Params, authInfo runtime.ClientAuthInfoWriter, opts ...service_principals_service.ClientOption) (*service_principals_service.ServicePrincipalsServiceDeleteServicePrincipalKey2OK, error) {
	_va := make([]interface{}, len(opts))
	for _i := range opts {
		_va[_i] = opts[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, params, authInfo)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for ServicePrincipalsServiceDeleteServicePrincipalKey2")
	}

	var r0 *service_principals_service.ServicePrincipalsServiceDeleteServicePrincipalKey2OK
	var r1 error
	if rf, ok := ret.Get(0).(func(*service_principals_service.ServicePrincipalsServiceDeleteServicePrincipalKey2Params, runtime.ClientAuthInfoWriter, ...service_principals_service.ClientOption) (*service_principals_service.ServicePrincipalsServiceDeleteServicePrincipalKey2OK, error)); ok {
		return rf(params, authInfo, opts...)
	}
	if rf, ok := ret.Get(0).(func(*service_principals_service.ServicePrincipalsServiceDeleteServicePrincipalKey2Params, runtime.ClientAuthInfoWriter, ...service_principals_service.ClientOption) *service_principals_service.ServicePrincipalsServiceDeleteServicePrincipalKey2OK); ok {
		r0 = rf(params, authInfo, opts...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*service_principals_service.ServicePrincipalsServiceDeleteServicePrincipalKey2OK)
		}
	}

	if rf, ok := ret.Get(1).(func(*service_principals_service.ServicePrincipalsServiceDeleteServicePrincipalKey2Params, runtime.ClientAuthInfoWriter, ...service_principals_service.ClientOption) error); ok {
		r1 = rf(params, authInfo, opts...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// MockClientService_ServicePrincipalsServiceDeleteServicePrincipalKey2_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ServicePrincipalsServiceDeleteServicePrincipalKey2'
type MockClientService_ServicePrincipalsServiceDeleteServicePrincipalKey2_Call struct {
	*mock.Call
}

// ServicePrincipalsServiceDeleteServicePrincipalKey2 is a helper method to define mock.On call
//   - params *service_principals_service.ServicePrincipalsServiceDeleteServicePrincipalKey2Params
//   - authInfo runtime.ClientAuthInfoWriter
//   - opts ...service_principals_service.ClientOption
func (_e *MockClientService_Expecter) ServicePrincipalsServiceDeleteServicePrincipalKey2(params interface{}, authInfo interface{}, opts ...interface{}) *MockClientService_ServicePrincipalsServiceDeleteServicePrincipalKey2_Call {
	return &MockClientService_ServicePrincipalsServiceDeleteServicePrincipalKey2_Call{Call: _e.mock.On("ServicePrincipalsServiceDeleteServicePrincipalKey2",
		append([]interface{}{params, authInfo}, opts...)...)}
}

func (_c *MockClientService_ServicePrincipalsServiceDeleteServicePrincipalKey2_Call) Run(run func(params *service_principals_service.ServicePrincipalsServiceDeleteServicePrincipalKey2Params, authInfo runtime.ClientAuthInfoWriter, opts ...service_principals_service.ClientOption)) *MockClientService_ServicePrincipalsServiceDeleteServicePrincipalKey2_Call {
	_c.Call.Run(func(args mock.Arguments) {
		variadicArgs := make([]service_principals_service.ClientOption, len(args)-2)
		for i, a := range args[2:] {
			if a != nil {
				variadicArgs[i] = a.(service_principals_service.ClientOption)
			}
		}
		run(args[0].(*service_principals_service.ServicePrincipalsServiceDeleteServicePrincipalKey2Params), args[1].(runtime.ClientAuthInfoWriter), variadicArgs...)
	})
	return _c
}

func (_c *MockClientService_ServicePrincipalsServiceDeleteServicePrincipalKey2_Call) Return(_a0 *service_principals_service.ServicePrincipalsServiceDeleteServicePrincipalKey2OK, _a1 error) *MockClientService_ServicePrincipalsServiceDeleteServicePrincipalKey2_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockClientService_ServicePrincipalsServiceDeleteServicePrincipalKey2_Call) RunAndReturn(run func(*service_principals_service.ServicePrincipalsServiceDeleteServicePrincipalKey2Params, runtime.ClientAuthInfoWriter, ...service_principals_service.ClientOption) (*service_principals_service.ServicePrincipalsServiceDeleteServicePrincipalKey2OK, error)) *MockClientService_ServicePrincipalsServiceDeleteServicePrincipalKey2_Call {
	_c.Call.Return(run)
	return _c
}

// ServicePrincipalsServiceDeleteWorkloadIdentityProvider provides a mock function with given fields: params, authInfo, opts
func (_m *MockClientService) ServicePrincipalsServiceDeleteWorkloadIdentityProvider(params *service_principals_service.ServicePrincipalsServiceDeleteWorkloadIdentityProviderParams, authInfo runtime.ClientAuthInfoWriter, opts ...service_principals_service.ClientOption) (*service_principals_service.ServicePrincipalsServiceDeleteWorkloadIdentityProviderOK, error) {
	_va := make([]interface{}, len(opts))
	for _i := range opts {
		_va[_i] = opts[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, params, authInfo)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for ServicePrincipalsServiceDeleteWorkloadIdentityProvider")
	}

	var r0 *service_principals_service.ServicePrincipalsServiceDeleteWorkloadIdentityProviderOK
	var r1 error
	if rf, ok := ret.Get(0).(func(*service_principals_service.ServicePrincipalsServiceDeleteWorkloadIdentityProviderParams, runtime.ClientAuthInfoWriter, ...service_principals_service.ClientOption) (*service_principals_service.ServicePrincipalsServiceDeleteWorkloadIdentityProviderOK, error)); ok {
		return rf(params, authInfo, opts...)
	}
	if rf, ok := ret.Get(0).(func(*service_principals_service.ServicePrincipalsServiceDeleteWorkloadIdentityProviderParams, runtime.ClientAuthInfoWriter, ...service_principals_service.ClientOption) *service_principals_service.ServicePrincipalsServiceDeleteWorkloadIdentityProviderOK); ok {
		r0 = rf(params, authInfo, opts...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*service_principals_service.ServicePrincipalsServiceDeleteWorkloadIdentityProviderOK)
		}
	}

	if rf, ok := ret.Get(1).(func(*service_principals_service.ServicePrincipalsServiceDeleteWorkloadIdentityProviderParams, runtime.ClientAuthInfoWriter, ...service_principals_service.ClientOption) error); ok {
		r1 = rf(params, authInfo, opts...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// MockClientService_ServicePrincipalsServiceDeleteWorkloadIdentityProvider_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ServicePrincipalsServiceDeleteWorkloadIdentityProvider'
type MockClientService_ServicePrincipalsServiceDeleteWorkloadIdentityProvider_Call struct {
	*mock.Call
}

// ServicePrincipalsServiceDeleteWorkloadIdentityProvider is a helper method to define mock.On call
//   - params *service_principals_service.ServicePrincipalsServiceDeleteWorkloadIdentityProviderParams
//   - authInfo runtime.ClientAuthInfoWriter
//   - opts ...service_principals_service.ClientOption
func (_e *MockClientService_Expecter) ServicePrincipalsServiceDeleteWorkloadIdentityProvider(params interface{}, authInfo interface{}, opts ...interface{}) *MockClientService_ServicePrincipalsServiceDeleteWorkloadIdentityProvider_Call {
	return &MockClientService_ServicePrincipalsServiceDeleteWorkloadIdentityProvider_Call{Call: _e.mock.On("ServicePrincipalsServiceDeleteWorkloadIdentityProvider",
		append([]interface{}{params, authInfo}, opts...)...)}
}

func (_c *MockClientService_ServicePrincipalsServiceDeleteWorkloadIdentityProvider_Call) Run(run func(params *service_principals_service.ServicePrincipalsServiceDeleteWorkloadIdentityProviderParams, authInfo runtime.ClientAuthInfoWriter, opts ...service_principals_service.ClientOption)) *MockClientService_ServicePrincipalsServiceDeleteWorkloadIdentityProvider_Call {
	_c.Call.Run(func(args mock.Arguments) {
		variadicArgs := make([]service_principals_service.ClientOption, len(args)-2)
		for i, a := range args[2:] {
			if a != nil {
				variadicArgs[i] = a.(service_principals_service.ClientOption)
			}
		}
		run(args[0].(*service_principals_service.ServicePrincipalsServiceDeleteWorkloadIdentityProviderParams), args[1].(runtime.ClientAuthInfoWriter), variadicArgs...)
	})
	return _c
}

func (_c *MockClientService_ServicePrincipalsServiceDeleteWorkloadIdentityProvider_Call) Return(_a0 *service_principals_service.ServicePrincipalsServiceDeleteWorkloadIdentityProviderOK, _a1 error) *MockClientService_ServicePrincipalsServiceDeleteWorkloadIdentityProvider_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockClientService_ServicePrincipalsServiceDeleteWorkloadIdentityProvider_Call) RunAndReturn(run func(*service_principals_service.ServicePrincipalsServiceDeleteWorkloadIdentityProviderParams, runtime.ClientAuthInfoWriter, ...service_principals_service.ClientOption) (*service_principals_service.ServicePrincipalsServiceDeleteWorkloadIdentityProviderOK, error)) *MockClientService_ServicePrincipalsServiceDeleteWorkloadIdentityProvider_Call {
	_c.Call.Return(run)
	return _c
}

// ServicePrincipalsServiceExchangeWorkloadIdentityToken provides a mock function with given fields: params, authInfo, opts
func (_m *MockClientService) ServicePrincipalsServiceExchangeWorkloadIdentityToken(params *service_principals_service.ServicePrincipalsServiceExchangeWorkloadIdentityTokenParams, authInfo runtime.ClientAuthInfoWriter, opts ...service_principals_service.ClientOption) (*service_principals_service.ServicePrincipalsServiceExchangeWorkloadIdentityTokenOK, error) {
	_va := make([]interface{}, len(opts))
	for _i := range opts {
		_va[_i] = opts[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, params, authInfo)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for ServicePrincipalsServiceExchangeWorkloadIdentityToken")
	}

	var r0 *service_principals_service.ServicePrincipalsServiceExchangeWorkloadIdentityTokenOK
	var r1 error
	if rf, ok := ret.Get(0).(func(*service_principals_service.ServicePrincipalsServiceExchangeWorkloadIdentityTokenParams, runtime.ClientAuthInfoWriter, ...service_principals_service.ClientOption) (*service_principals_service.ServicePrincipalsServiceExchangeWorkloadIdentityTokenOK, error)); ok {
		return rf(params, authInfo, opts...)
	}
	if rf, ok := ret.Get(0).(func(*service_principals_service.ServicePrincipalsServiceExchangeWorkloadIdentityTokenParams, runtime.ClientAuthInfoWriter, ...service_principals_service.ClientOption) *service_principals_service.ServicePrincipalsServiceExchangeWorkloadIdentityTokenOK); ok {
		r0 = rf(params, authInfo, opts...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*service_principals_service.ServicePrincipalsServiceExchangeWorkloadIdentityTokenOK)
		}
	}

	if rf, ok := ret.Get(1).(func(*service_principals_service.ServicePrincipalsServiceExchangeWorkloadIdentityTokenParams, runtime.ClientAuthInfoWriter, ...service_principals_service.ClientOption) error); ok {
		r1 = rf(params, authInfo, opts...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// MockClientService_ServicePrincipalsServiceExchangeWorkloadIdentityToken_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ServicePrincipalsServiceExchangeWorkloadIdentityToken'
type MockClientService_ServicePrincipalsServiceExchangeWorkloadIdentityToken_Call struct {
	*mock.Call
}

// ServicePrincipalsServiceExchangeWorkloadIdentityToken is a helper method to define mock.On call
//   - params *service_principals_service.ServicePrincipalsServiceExchangeWorkloadIdentityTokenParams
//   - authInfo runtime.ClientAuthInfoWriter
//   - opts ...service_principals_service.ClientOption
func (_e *MockClientService_Expecter) ServicePrincipalsServiceExchangeWorkloadIdentityToken(params interface{}, authInfo interface{}, opts ...interface{}) *MockClientService_ServicePrincipalsServiceExchangeWorkloadIdentityToken_Call {
	return &MockClientService_ServicePrincipalsServiceExchangeWorkloadIdentityToken_Call{Call: _e.mock.On("ServicePrincipalsServiceExchangeWorkloadIdentityToken",
		append([]interface{}{params, authInfo}, opts...)...)}
}

func (_c *MockClientService_ServicePrincipalsServiceExchangeWorkloadIdentityToken_Call) Run(run func(params *service_principals_service.ServicePrincipalsServiceExchangeWorkloadIdentityTokenParams, authInfo runtime.ClientAuthInfoWriter, opts ...service_principals_service.ClientOption)) *MockClientService_ServicePrincipalsServiceExchangeWorkloadIdentityToken_Call {
	_c.Call.Run(func(args mock.Arguments) {
		variadicArgs := make([]service_principals_service.ClientOption, len(args)-2)
		for i, a := range args[2:] {
			if a != nil {
				variadicArgs[i] = a.(service_principals_service.ClientOption)
			}
		}
		run(args[0].(*service_principals_service.ServicePrincipalsServiceExchangeWorkloadIdentityTokenParams), args[1].(runtime.ClientAuthInfoWriter), variadicArgs...)
	})
	return _c
}

func (_c *MockClientService_ServicePrincipalsServiceExchangeWorkloadIdentityToken_Call) Return(_a0 *service_principals_service.ServicePrincipalsServiceExchangeWorkloadIdentityTokenOK, _a1 error) *MockClientService_ServicePrincipalsServiceExchangeWorkloadIdentityToken_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockClientService_ServicePrincipalsServiceExchangeWorkloadIdentityToken_Call) RunAndReturn(run func(*service_principals_service.ServicePrincipalsServiceExchangeWorkloadIdentityTokenParams, runtime.ClientAuthInfoWriter, ...service_principals_service.ClientOption) (*service_principals_service.ServicePrincipalsServiceExchangeWorkloadIdentityTokenOK, error)) *MockClientService_ServicePrincipalsServiceExchangeWorkloadIdentityToken_Call {
	_c.Call.Return(run)
	return _c
}

// ServicePrincipalsServiceGetOrganizationServicePrincipal provides a mock function with given fields: params, authInfo, opts
func (_m *MockClientService) ServicePrincipalsServiceGetOrganizationServicePrincipal(params *service_principals_service.ServicePrincipalsServiceGetOrganizationServicePrincipalParams, authInfo runtime.ClientAuthInfoWriter, opts ...service_principals_service.ClientOption) (*service_principals_service.ServicePrincipalsServiceGetOrganizationServicePrincipalOK, error) {
	_va := make([]interface{}, len(opts))
	for _i := range opts {
		_va[_i] = opts[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, params, authInfo)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for ServicePrincipalsServiceGetOrganizationServicePrincipal")
	}

	var r0 *service_principals_service.ServicePrincipalsServiceGetOrganizationServicePrincipalOK
	var r1 error
	if rf, ok := ret.Get(0).(func(*service_principals_service.ServicePrincipalsServiceGetOrganizationServicePrincipalParams, runtime.ClientAuthInfoWriter, ...service_principals_service.ClientOption) (*service_principals_service.ServicePrincipalsServiceGetOrganizationServicePrincipalOK, error)); ok {
		return rf(params, authInfo, opts...)
	}
	if rf, ok := ret.Get(0).(func(*service_principals_service.ServicePrincipalsServiceGetOrganizationServicePrincipalParams, runtime.ClientAuthInfoWriter, ...service_principals_service.ClientOption) *service_principals_service.ServicePrincipalsServiceGetOrganizationServicePrincipalOK); ok {
		r0 = rf(params, authInfo, opts...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*service_principals_service.ServicePrincipalsServiceGetOrganizationServicePrincipalOK)
		}
	}

	if rf, ok := ret.Get(1).(func(*service_principals_service.ServicePrincipalsServiceGetOrganizationServicePrincipalParams, runtime.ClientAuthInfoWriter, ...service_principals_service.ClientOption) error); ok {
		r1 = rf(params, authInfo, opts...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// MockClientService_ServicePrincipalsServiceGetOrganizationServicePrincipal_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ServicePrincipalsServiceGetOrganizationServicePrincipal'
type MockClientService_ServicePrincipalsServiceGetOrganizationServicePrincipal_Call struct {
	*mock.Call
}

// ServicePrincipalsServiceGetOrganizationServicePrincipal is a helper method to define mock.On call
//   - params *service_principals_service.ServicePrincipalsServiceGetOrganizationServicePrincipalParams
//   - authInfo runtime.ClientAuthInfoWriter
//   - opts ...service_principals_service.ClientOption
func (_e *MockClientService_Expecter) ServicePrincipalsServiceGetOrganizationServicePrincipal(params interface{}, authInfo interface{}, opts ...interface{}) *MockClientService_ServicePrincipalsServiceGetOrganizationServicePrincipal_Call {
	return &MockClientService_ServicePrincipalsServiceGetOrganizationServicePrincipal_Call{Call: _e.mock.On("ServicePrincipalsServiceGetOrganizationServicePrincipal",
		append([]interface{}{params, authInfo}, opts...)...)}
}

func (_c *MockClientService_ServicePrincipalsServiceGetOrganizationServicePrincipal_Call) Run(run func(params *service_principals_service.ServicePrincipalsServiceGetOrganizationServicePrincipalParams, authInfo runtime.ClientAuthInfoWriter, opts ...service_principals_service.ClientOption)) *MockClientService_ServicePrincipalsServiceGetOrganizationServicePrincipal_Call {
	_c.Call.Run(func(args mock.Arguments) {
		variadicArgs := make([]service_principals_service.ClientOption, len(args)-2)
		for i, a := range args[2:] {
			if a != nil {
				variadicArgs[i] = a.(service_principals_service.ClientOption)
			}
		}
		run(args[0].(*service_principals_service.ServicePrincipalsServiceGetOrganizationServicePrincipalParams), args[1].(runtime.ClientAuthInfoWriter), variadicArgs...)
	})
	return _c
}

func (_c *MockClientService_ServicePrincipalsServiceGetOrganizationServicePrincipal_Call) Return(_a0 *service_principals_service.ServicePrincipalsServiceGetOrganizationServicePrincipalOK, _a1 error) *MockClientService_ServicePrincipalsServiceGetOrganizationServicePrincipal_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockClientService_ServicePrincipalsServiceGetOrganizationServicePrincipal_Call) RunAndReturn(run func(*service_principals_service.ServicePrincipalsServiceGetOrganizationServicePrincipalParams, runtime.ClientAuthInfoWriter, ...service_principals_service.ClientOption) (*service_principals_service.ServicePrincipalsServiceGetOrganizationServicePrincipalOK, error)) *MockClientService_ServicePrincipalsServiceGetOrganizationServicePrincipal_Call {
	_c.Call.Return(run)
	return _c
}

// ServicePrincipalsServiceGetProjectServicePrincipal provides a mock function with given fields: params, authInfo, opts
func (_m *MockClientService) ServicePrincipalsServiceGetProjectServicePrincipal(params *service_principals_service.ServicePrincipalsServiceGetProjectServicePrincipalParams, authInfo runtime.ClientAuthInfoWriter, opts ...service_principals_service.ClientOption) (*service_principals_service.ServicePrincipalsServiceGetProjectServicePrincipalOK, error) {
	_va := make([]interface{}, len(opts))
	for _i := range opts {
		_va[_i] = opts[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, params, authInfo)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for ServicePrincipalsServiceGetProjectServicePrincipal")
	}

	var r0 *service_principals_service.ServicePrincipalsServiceGetProjectServicePrincipalOK
	var r1 error
	if rf, ok := ret.Get(0).(func(*service_principals_service.ServicePrincipalsServiceGetProjectServicePrincipalParams, runtime.ClientAuthInfoWriter, ...service_principals_service.ClientOption) (*service_principals_service.ServicePrincipalsServiceGetProjectServicePrincipalOK, error)); ok {
		return rf(params, authInfo, opts...)
	}
	if rf, ok := ret.Get(0).(func(*service_principals_service.ServicePrincipalsServiceGetProjectServicePrincipalParams, runtime.ClientAuthInfoWriter, ...service_principals_service.ClientOption) *service_principals_service.ServicePrincipalsServiceGetProjectServicePrincipalOK); ok {
		r0 = rf(params, authInfo, opts...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*service_principals_service.ServicePrincipalsServiceGetProjectServicePrincipalOK)
		}
	}

	if rf, ok := ret.Get(1).(func(*service_principals_service.ServicePrincipalsServiceGetProjectServicePrincipalParams, runtime.ClientAuthInfoWriter, ...service_principals_service.ClientOption) error); ok {
		r1 = rf(params, authInfo, opts...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// MockClientService_ServicePrincipalsServiceGetProjectServicePrincipal_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ServicePrincipalsServiceGetProjectServicePrincipal'
type MockClientService_ServicePrincipalsServiceGetProjectServicePrincipal_Call struct {
	*mock.Call
}

// ServicePrincipalsServiceGetProjectServicePrincipal is a helper method to define mock.On call
//   - params *service_principals_service.ServicePrincipalsServiceGetProjectServicePrincipalParams
//   - authInfo runtime.ClientAuthInfoWriter
//   - opts ...service_principals_service.ClientOption
func (_e *MockClientService_Expecter) ServicePrincipalsServiceGetProjectServicePrincipal(params interface{}, authInfo interface{}, opts ...interface{}) *MockClientService_ServicePrincipalsServiceGetProjectServicePrincipal_Call {
	return &MockClientService_ServicePrincipalsServiceGetProjectServicePrincipal_Call{Call: _e.mock.On("ServicePrincipalsServiceGetProjectServicePrincipal",
		append([]interface{}{params, authInfo}, opts...)...)}
}

func (_c *MockClientService_ServicePrincipalsServiceGetProjectServicePrincipal_Call) Run(run func(params *service_principals_service.ServicePrincipalsServiceGetProjectServicePrincipalParams, authInfo runtime.ClientAuthInfoWriter, opts ...service_principals_service.ClientOption)) *MockClientService_ServicePrincipalsServiceGetProjectServicePrincipal_Call {
	_c.Call.Run(func(args mock.Arguments) {
		variadicArgs := make([]service_principals_service.ClientOption, len(args)-2)
		for i, a := range args[2:] {
			if a != nil {
				variadicArgs[i] = a.(service_principals_service.ClientOption)
			}
		}
		run(args[0].(*service_principals_service.ServicePrincipalsServiceGetProjectServicePrincipalParams), args[1].(runtime.ClientAuthInfoWriter), variadicArgs...)
	})
	return _c
}

func (_c *MockClientService_ServicePrincipalsServiceGetProjectServicePrincipal_Call) Return(_a0 *service_principals_service.ServicePrincipalsServiceGetProjectServicePrincipalOK, _a1 error) *MockClientService_ServicePrincipalsServiceGetProjectServicePrincipal_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockClientService_ServicePrincipalsServiceGetProjectServicePrincipal_Call) RunAndReturn(run func(*service_principals_service.ServicePrincipalsServiceGetProjectServicePrincipalParams, runtime.ClientAuthInfoWriter, ...service_principals_service.ClientOption) (*service_principals_service.ServicePrincipalsServiceGetProjectServicePrincipalOK, error)) *MockClientService_ServicePrincipalsServiceGetProjectServicePrincipal_Call {
	_c.Call.Return(run)
	return _c
}

// ServicePrincipalsServiceGetServicePrincipal provides a mock function with given fields: params, authInfo, opts
func (_m *MockClientService) ServicePrincipalsServiceGetServicePrincipal(params *service_principals_service.ServicePrincipalsServiceGetServicePrincipalParams, authInfo runtime.ClientAuthInfoWriter, opts ...service_principals_service.ClientOption) (*service_principals_service.ServicePrincipalsServiceGetServicePrincipalOK, error) {
	_va := make([]interface{}, len(opts))
	for _i := range opts {
		_va[_i] = opts[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, params, authInfo)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for ServicePrincipalsServiceGetServicePrincipal")
	}

	var r0 *service_principals_service.ServicePrincipalsServiceGetServicePrincipalOK
	var r1 error
	if rf, ok := ret.Get(0).(func(*service_principals_service.ServicePrincipalsServiceGetServicePrincipalParams, runtime.ClientAuthInfoWriter, ...service_principals_service.ClientOption) (*service_principals_service.ServicePrincipalsServiceGetServicePrincipalOK, error)); ok {
		return rf(params, authInfo, opts...)
	}
	if rf, ok := ret.Get(0).(func(*service_principals_service.ServicePrincipalsServiceGetServicePrincipalParams, runtime.ClientAuthInfoWriter, ...service_principals_service.ClientOption) *service_principals_service.ServicePrincipalsServiceGetServicePrincipalOK); ok {
		r0 = rf(params, authInfo, opts...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*service_principals_service.ServicePrincipalsServiceGetServicePrincipalOK)
		}
	}

	if rf, ok := ret.Get(1).(func(*service_principals_service.ServicePrincipalsServiceGetServicePrincipalParams, runtime.ClientAuthInfoWriter, ...service_principals_service.ClientOption) error); ok {
		r1 = rf(params, authInfo, opts...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// MockClientService_ServicePrincipalsServiceGetServicePrincipal_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ServicePrincipalsServiceGetServicePrincipal'
type MockClientService_ServicePrincipalsServiceGetServicePrincipal_Call struct {
	*mock.Call
}

// ServicePrincipalsServiceGetServicePrincipal is a helper method to define mock.On call
//   - params *service_principals_service.ServicePrincipalsServiceGetServicePrincipalParams
//   - authInfo runtime.ClientAuthInfoWriter
//   - opts ...service_principals_service.ClientOption
func (_e *MockClientService_Expecter) ServicePrincipalsServiceGetServicePrincipal(params interface{}, authInfo interface{}, opts ...interface{}) *MockClientService_ServicePrincipalsServiceGetServicePrincipal_Call {
	return &MockClientService_ServicePrincipalsServiceGetServicePrincipal_Call{Call: _e.mock.On("ServicePrincipalsServiceGetServicePrincipal",
		append([]interface{}{params, authInfo}, opts...)...)}
}

func (_c *MockClientService_ServicePrincipalsServiceGetServicePrincipal_Call) Run(run func(params *service_principals_service.ServicePrincipalsServiceGetServicePrincipalParams, authInfo runtime.ClientAuthInfoWriter, opts ...service_principals_service.ClientOption)) *MockClientService_ServicePrincipalsServiceGetServicePrincipal_Call {
	_c.Call.Run(func(args mock.Arguments) {
		variadicArgs := make([]service_principals_service.ClientOption, len(args)-2)
		for i, a := range args[2:] {
			if a != nil {
				variadicArgs[i] = a.(service_principals_service.ClientOption)
			}
		}
		run(args[0].(*service_principals_service.ServicePrincipalsServiceGetServicePrincipalParams), args[1].(runtime.ClientAuthInfoWriter), variadicArgs...)
	})
	return _c
}

func (_c *MockClientService_ServicePrincipalsServiceGetServicePrincipal_Call) Return(_a0 *service_principals_service.ServicePrincipalsServiceGetServicePrincipalOK, _a1 error) *MockClientService_ServicePrincipalsServiceGetServicePrincipal_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockClientService_ServicePrincipalsServiceGetServicePrincipal_Call) RunAndReturn(run func(*service_principals_service.ServicePrincipalsServiceGetServicePrincipalParams, runtime.ClientAuthInfoWriter, ...service_principals_service.ClientOption) (*service_principals_service.ServicePrincipalsServiceGetServicePrincipalOK, error)) *MockClientService_ServicePrincipalsServiceGetServicePrincipal_Call {
	_c.Call.Return(run)
	return _c
}

// ServicePrincipalsServiceGetServicePrincipal2 provides a mock function with given fields: params, authInfo, opts
func (_m *MockClientService) ServicePrincipalsServiceGetServicePrincipal2(params *service_principals_service.ServicePrincipalsServiceGetServicePrincipal2Params, authInfo runtime.ClientAuthInfoWriter, opts ...service_principals_service.ClientOption) (*service_principals_service.ServicePrincipalsServiceGetServicePrincipal2OK, error) {
	_va := make([]interface{}, len(opts))
	for _i := range opts {
		_va[_i] = opts[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, params, authInfo)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for ServicePrincipalsServiceGetServicePrincipal2")
	}

	var r0 *service_principals_service.ServicePrincipalsServiceGetServicePrincipal2OK
	var r1 error
	if rf, ok := ret.Get(0).(func(*service_principals_service.ServicePrincipalsServiceGetServicePrincipal2Params, runtime.ClientAuthInfoWriter, ...service_principals_service.ClientOption) (*service_principals_service.ServicePrincipalsServiceGetServicePrincipal2OK, error)); ok {
		return rf(params, authInfo, opts...)
	}
	if rf, ok := ret.Get(0).(func(*service_principals_service.ServicePrincipalsServiceGetServicePrincipal2Params, runtime.ClientAuthInfoWriter, ...service_principals_service.ClientOption) *service_principals_service.ServicePrincipalsServiceGetServicePrincipal2OK); ok {
		r0 = rf(params, authInfo, opts...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*service_principals_service.ServicePrincipalsServiceGetServicePrincipal2OK)
		}
	}

	if rf, ok := ret.Get(1).(func(*service_principals_service.ServicePrincipalsServiceGetServicePrincipal2Params, runtime.ClientAuthInfoWriter, ...service_principals_service.ClientOption) error); ok {
		r1 = rf(params, authInfo, opts...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// MockClientService_ServicePrincipalsServiceGetServicePrincipal2_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ServicePrincipalsServiceGetServicePrincipal2'
type MockClientService_ServicePrincipalsServiceGetServicePrincipal2_Call struct {
	*mock.Call
}

// ServicePrincipalsServiceGetServicePrincipal2 is a helper method to define mock.On call
//   - params *service_principals_service.ServicePrincipalsServiceGetServicePrincipal2Params
//   - authInfo runtime.ClientAuthInfoWriter
//   - opts ...service_principals_service.ClientOption
func (_e *MockClientService_Expecter) ServicePrincipalsServiceGetServicePrincipal2(params interface{}, authInfo interface{}, opts ...interface{}) *MockClientService_ServicePrincipalsServiceGetServicePrincipal2_Call {
	return &MockClientService_ServicePrincipalsServiceGetServicePrincipal2_Call{Call: _e.mock.On("ServicePrincipalsServiceGetServicePrincipal2",
		append([]interface{}{params, authInfo}, opts...)...)}
}

func (_c *MockClientService_ServicePrincipalsServiceGetServicePrincipal2_Call) Run(run func(params *service_principals_service.ServicePrincipalsServiceGetServicePrincipal2Params, authInfo runtime.ClientAuthInfoWriter, opts ...service_principals_service.ClientOption)) *MockClientService_ServicePrincipalsServiceGetServicePrincipal2_Call {
	_c.Call.Run(func(args mock.Arguments) {
		variadicArgs := make([]service_principals_service.ClientOption, len(args)-2)
		for i, a := range args[2:] {
			if a != nil {
				variadicArgs[i] = a.(service_principals_service.ClientOption)
			}
		}
		run(args[0].(*service_principals_service.ServicePrincipalsServiceGetServicePrincipal2Params), args[1].(runtime.ClientAuthInfoWriter), variadicArgs...)
	})
	return _c
}

func (_c *MockClientService_ServicePrincipalsServiceGetServicePrincipal2_Call) Return(_a0 *service_principals_service.ServicePrincipalsServiceGetServicePrincipal2OK, _a1 error) *MockClientService_ServicePrincipalsServiceGetServicePrincipal2_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockClientService_ServicePrincipalsServiceGetServicePrincipal2_Call) RunAndReturn(run func(*service_principals_service.ServicePrincipalsServiceGetServicePrincipal2Params, runtime.ClientAuthInfoWriter, ...service_principals_service.ClientOption) (*service_principals_service.ServicePrincipalsServiceGetServicePrincipal2OK, error)) *MockClientService_ServicePrincipalsServiceGetServicePrincipal2_Call {
	_c.Call.Return(run)
	return _c
}

// ServicePrincipalsServiceGetWorkloadIdentityProvider provides a mock function with given fields: params, authInfo, opts
func (_m *MockClientService) ServicePrincipalsServiceGetWorkloadIdentityProvider(params *service_principals_service.ServicePrincipalsServiceGetWorkloadIdentityProviderParams, authInfo runtime.ClientAuthInfoWriter, opts ...service_principals_service.ClientOption) (*service_principals_service.ServicePrincipalsServiceGetWorkloadIdentityProviderOK, error) {
	_va := make([]interface{}, len(opts))
	for _i := range opts {
		_va[_i] = opts[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, params, authInfo)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for ServicePrincipalsServiceGetWorkloadIdentityProvider")
	}

	var r0 *service_principals_service.ServicePrincipalsServiceGetWorkloadIdentityProviderOK
	var r1 error
	if rf, ok := ret.Get(0).(func(*service_principals_service.ServicePrincipalsServiceGetWorkloadIdentityProviderParams, runtime.ClientAuthInfoWriter, ...service_principals_service.ClientOption) (*service_principals_service.ServicePrincipalsServiceGetWorkloadIdentityProviderOK, error)); ok {
		return rf(params, authInfo, opts...)
	}
	if rf, ok := ret.Get(0).(func(*service_principals_service.ServicePrincipalsServiceGetWorkloadIdentityProviderParams, runtime.ClientAuthInfoWriter, ...service_principals_service.ClientOption) *service_principals_service.ServicePrincipalsServiceGetWorkloadIdentityProviderOK); ok {
		r0 = rf(params, authInfo, opts...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*service_principals_service.ServicePrincipalsServiceGetWorkloadIdentityProviderOK)
		}
	}

	if rf, ok := ret.Get(1).(func(*service_principals_service.ServicePrincipalsServiceGetWorkloadIdentityProviderParams, runtime.ClientAuthInfoWriter, ...service_principals_service.ClientOption) error); ok {
		r1 = rf(params, authInfo, opts...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// MockClientService_ServicePrincipalsServiceGetWorkloadIdentityProvider_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ServicePrincipalsServiceGetWorkloadIdentityProvider'
type MockClientService_ServicePrincipalsServiceGetWorkloadIdentityProvider_Call struct {
	*mock.Call
}

// ServicePrincipalsServiceGetWorkloadIdentityProvider is a helper method to define mock.On call
//   - params *service_principals_service.ServicePrincipalsServiceGetWorkloadIdentityProviderParams
//   - authInfo runtime.ClientAuthInfoWriter
//   - opts ...service_principals_service.ClientOption
func (_e *MockClientService_Expecter) ServicePrincipalsServiceGetWorkloadIdentityProvider(params interface{}, authInfo interface{}, opts ...interface{}) *MockClientService_ServicePrincipalsServiceGetWorkloadIdentityProvider_Call {
	return &MockClientService_ServicePrincipalsServiceGetWorkloadIdentityProvider_Call{Call: _e.mock.On("ServicePrincipalsServiceGetWorkloadIdentityProvider",
		append([]interface{}{params, authInfo}, opts...)...)}
}

func (_c *MockClientService_ServicePrincipalsServiceGetWorkloadIdentityProvider_Call) Run(run func(params *service_principals_service.ServicePrincipalsServiceGetWorkloadIdentityProviderParams, authInfo runtime.ClientAuthInfoWriter, opts ...service_principals_service.ClientOption)) *MockClientService_ServicePrincipalsServiceGetWorkloadIdentityProvider_Call {
	_c.Call.Run(func(args mock.Arguments) {
		variadicArgs := make([]service_principals_service.ClientOption, len(args)-2)
		for i, a := range args[2:] {
			if a != nil {
				variadicArgs[i] = a.(service_principals_service.ClientOption)
			}
		}
		run(args[0].(*service_principals_service.ServicePrincipalsServiceGetWorkloadIdentityProviderParams), args[1].(runtime.ClientAuthInfoWriter), variadicArgs...)
	})
	return _c
}

func (_c *MockClientService_ServicePrincipalsServiceGetWorkloadIdentityProvider_Call) Return(_a0 *service_principals_service.ServicePrincipalsServiceGetWorkloadIdentityProviderOK, _a1 error) *MockClientService_ServicePrincipalsServiceGetWorkloadIdentityProvider_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockClientService_ServicePrincipalsServiceGetWorkloadIdentityProvider_Call) RunAndReturn(run func(*service_principals_service.ServicePrincipalsServiceGetWorkloadIdentityProviderParams, runtime.ClientAuthInfoWriter, ...service_principals_service.ClientOption) (*service_principals_service.ServicePrincipalsServiceGetWorkloadIdentityProviderOK, error)) *MockClientService_ServicePrincipalsServiceGetWorkloadIdentityProvider_Call {
	_c.Call.Return(run)
	return _c
}

// ServicePrincipalsServiceListOrganizationServicePrincipals provides a mock function with given fields: params, authInfo, opts
func (_m *MockClientService) ServicePrincipalsServiceListOrganizationServicePrincipals(params *service_principals_service.ServicePrincipalsServiceListOrganizationServicePrincipalsParams, authInfo runtime.ClientAuthInfoWriter, opts ...service_principals_service.ClientOption) (*service_principals_service.ServicePrincipalsServiceListOrganizationServicePrincipalsOK, error) {
	_va := make([]interface{}, len(opts))
	for _i := range opts {
		_va[_i] = opts[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, params, authInfo)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for ServicePrincipalsServiceListOrganizationServicePrincipals")
	}

	var r0 *service_principals_service.ServicePrincipalsServiceListOrganizationServicePrincipalsOK
	var r1 error
	if rf, ok := ret.Get(0).(func(*service_principals_service.ServicePrincipalsServiceListOrganizationServicePrincipalsParams, runtime.ClientAuthInfoWriter, ...service_principals_service.ClientOption) (*service_principals_service.ServicePrincipalsServiceListOrganizationServicePrincipalsOK, error)); ok {
		return rf(params, authInfo, opts...)
	}
	if rf, ok := ret.Get(0).(func(*service_principals_service.ServicePrincipalsServiceListOrganizationServicePrincipalsParams, runtime.ClientAuthInfoWriter, ...service_principals_service.ClientOption) *service_principals_service.ServicePrincipalsServiceListOrganizationServicePrincipalsOK); ok {
		r0 = rf(params, authInfo, opts...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*service_principals_service.ServicePrincipalsServiceListOrganizationServicePrincipalsOK)
		}
	}

	if rf, ok := ret.Get(1).(func(*service_principals_service.ServicePrincipalsServiceListOrganizationServicePrincipalsParams, runtime.ClientAuthInfoWriter, ...service_principals_service.ClientOption) error); ok {
		r1 = rf(params, authInfo, opts...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// MockClientService_ServicePrincipalsServiceListOrganizationServicePrincipals_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ServicePrincipalsServiceListOrganizationServicePrincipals'
type MockClientService_ServicePrincipalsServiceListOrganizationServicePrincipals_Call struct {
	*mock.Call
}

// ServicePrincipalsServiceListOrganizationServicePrincipals is a helper method to define mock.On call
//   - params *service_principals_service.ServicePrincipalsServiceListOrganizationServicePrincipalsParams
//   - authInfo runtime.ClientAuthInfoWriter
//   - opts ...service_principals_service.ClientOption
func (_e *MockClientService_Expecter) ServicePrincipalsServiceListOrganizationServicePrincipals(params interface{}, authInfo interface{}, opts ...interface{}) *MockClientService_ServicePrincipalsServiceListOrganizationServicePrincipals_Call {
	return &MockClientService_ServicePrincipalsServiceListOrganizationServicePrincipals_Call{Call: _e.mock.On("ServicePrincipalsServiceListOrganizationServicePrincipals",
		append([]interface{}{params, authInfo}, opts...)...)}
}

func (_c *MockClientService_ServicePrincipalsServiceListOrganizationServicePrincipals_Call) Run(run func(params *service_principals_service.ServicePrincipalsServiceListOrganizationServicePrincipalsParams, authInfo runtime.ClientAuthInfoWriter, opts ...service_principals_service.ClientOption)) *MockClientService_ServicePrincipalsServiceListOrganizationServicePrincipals_Call {
	_c.Call.Run(func(args mock.Arguments) {
		variadicArgs := make([]service_principals_service.ClientOption, len(args)-2)
		for i, a := range args[2:] {
			if a != nil {
				variadicArgs[i] = a.(service_principals_service.ClientOption)
			}
		}
		run(args[0].(*service_principals_service.ServicePrincipalsServiceListOrganizationServicePrincipalsParams), args[1].(runtime.ClientAuthInfoWriter), variadicArgs...)
	})
	return _c
}

func (_c *MockClientService_ServicePrincipalsServiceListOrganizationServicePrincipals_Call) Return(_a0 *service_principals_service.ServicePrincipalsServiceListOrganizationServicePrincipalsOK, _a1 error) *MockClientService_ServicePrincipalsServiceListOrganizationServicePrincipals_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockClientService_ServicePrincipalsServiceListOrganizationServicePrincipals_Call) RunAndReturn(run func(*service_principals_service.ServicePrincipalsServiceListOrganizationServicePrincipalsParams, runtime.ClientAuthInfoWriter, ...service_principals_service.ClientOption) (*service_principals_service.ServicePrincipalsServiceListOrganizationServicePrincipalsOK, error)) *MockClientService_ServicePrincipalsServiceListOrganizationServicePrincipals_Call {
	_c.Call.Return(run)
	return _c
}

// ServicePrincipalsServiceListProjectServicePrincipals provides a mock function with given fields: params, authInfo, opts
func (_m *MockClientService) ServicePrincipalsServiceListProjectServicePrincipals(params *service_principals_service.ServicePrincipalsServiceListProjectServicePrincipalsParams, authInfo runtime.ClientAuthInfoWriter, opts ...service_principals_service.ClientOption) (*service_principals_service.ServicePrincipalsServiceListProjectServicePrincipalsOK, error) {
	_va := make([]interface{}, len(opts))
	for _i := range opts {
		_va[_i] = opts[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, params, authInfo)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for ServicePrincipalsServiceListProjectServicePrincipals")
	}

	var r0 *service_principals_service.ServicePrincipalsServiceListProjectServicePrincipalsOK
	var r1 error
	if rf, ok := ret.Get(0).(func(*service_principals_service.ServicePrincipalsServiceListProjectServicePrincipalsParams, runtime.ClientAuthInfoWriter, ...service_principals_service.ClientOption) (*service_principals_service.ServicePrincipalsServiceListProjectServicePrincipalsOK, error)); ok {
		return rf(params, authInfo, opts...)
	}
	if rf, ok := ret.Get(0).(func(*service_principals_service.ServicePrincipalsServiceListProjectServicePrincipalsParams, runtime.ClientAuthInfoWriter, ...service_principals_service.ClientOption) *service_principals_service.ServicePrincipalsServiceListProjectServicePrincipalsOK); ok {
		r0 = rf(params, authInfo, opts...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*service_principals_service.ServicePrincipalsServiceListProjectServicePrincipalsOK)
		}
	}

	if rf, ok := ret.Get(1).(func(*service_principals_service.ServicePrincipalsServiceListProjectServicePrincipalsParams, runtime.ClientAuthInfoWriter, ...service_principals_service.ClientOption) error); ok {
		r1 = rf(params, authInfo, opts...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// MockClientService_ServicePrincipalsServiceListProjectServicePrincipals_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ServicePrincipalsServiceListProjectServicePrincipals'
type MockClientService_ServicePrincipalsServiceListProjectServicePrincipals_Call struct {
	*mock.Call
}

// ServicePrincipalsServiceListProjectServicePrincipals is a helper method to define mock.On call
//   - params *service_principals_service.ServicePrincipalsServiceListProjectServicePrincipalsParams
//   - authInfo runtime.ClientAuthInfoWriter
//   - opts ...service_principals_service.ClientOption
func (_e *MockClientService_Expecter) ServicePrincipalsServiceListProjectServicePrincipals(params interface{}, authInfo interface{}, opts ...interface{}) *MockClientService_ServicePrincipalsServiceListProjectServicePrincipals_Call {
	return &MockClientService_ServicePrincipalsServiceListProjectServicePrincipals_Call{Call: _e.mock.On("ServicePrincipalsServiceListProjectServicePrincipals",
		append([]interface{}{params, authInfo}, opts...)...)}
}

func (_c *MockClientService_ServicePrincipalsServiceListProjectServicePrincipals_Call) Run(run func(params *service_principals_service.ServicePrincipalsServiceListProjectServicePrincipalsParams, authInfo runtime.ClientAuthInfoWriter, opts ...service_principals_service.ClientOption)) *MockClientService_ServicePrincipalsServiceListProjectServicePrincipals_Call {
	_c.Call.Run(func(args mock.Arguments) {
		variadicArgs := make([]service_principals_service.ClientOption, len(args)-2)
		for i, a := range args[2:] {
			if a != nil {
				variadicArgs[i] = a.(service_principals_service.ClientOption)
			}
		}
		run(args[0].(*service_principals_service.ServicePrincipalsServiceListProjectServicePrincipalsParams), args[1].(runtime.ClientAuthInfoWriter), variadicArgs...)
	})
	return _c
}

func (_c *MockClientService_ServicePrincipalsServiceListProjectServicePrincipals_Call) Return(_a0 *service_principals_service.ServicePrincipalsServiceListProjectServicePrincipalsOK, _a1 error) *MockClientService_ServicePrincipalsServiceListProjectServicePrincipals_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockClientService_ServicePrincipalsServiceListProjectServicePrincipals_Call) RunAndReturn(run func(*service_principals_service.ServicePrincipalsServiceListProjectServicePrincipalsParams, runtime.ClientAuthInfoWriter, ...service_principals_service.ClientOption) (*service_principals_service.ServicePrincipalsServiceListProjectServicePrincipalsOK, error)) *MockClientService_ServicePrincipalsServiceListProjectServicePrincipals_Call {
	_c.Call.Return(run)
	return _c
}

// ServicePrincipalsServiceListServicePrincipals provides a mock function with given fields: params, authInfo, opts
func (_m *MockClientService) ServicePrincipalsServiceListServicePrincipals(params *service_principals_service.ServicePrincipalsServiceListServicePrincipalsParams, authInfo runtime.ClientAuthInfoWriter, opts ...service_principals_service.ClientOption) (*service_principals_service.ServicePrincipalsServiceListServicePrincipalsOK, error) {
	_va := make([]interface{}, len(opts))
	for _i := range opts {
		_va[_i] = opts[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, params, authInfo)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for ServicePrincipalsServiceListServicePrincipals")
	}

	var r0 *service_principals_service.ServicePrincipalsServiceListServicePrincipalsOK
	var r1 error
	if rf, ok := ret.Get(0).(func(*service_principals_service.ServicePrincipalsServiceListServicePrincipalsParams, runtime.ClientAuthInfoWriter, ...service_principals_service.ClientOption) (*service_principals_service.ServicePrincipalsServiceListServicePrincipalsOK, error)); ok {
		return rf(params, authInfo, opts...)
	}
	if rf, ok := ret.Get(0).(func(*service_principals_service.ServicePrincipalsServiceListServicePrincipalsParams, runtime.ClientAuthInfoWriter, ...service_principals_service.ClientOption) *service_principals_service.ServicePrincipalsServiceListServicePrincipalsOK); ok {
		r0 = rf(params, authInfo, opts...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*service_principals_service.ServicePrincipalsServiceListServicePrincipalsOK)
		}
	}

	if rf, ok := ret.Get(1).(func(*service_principals_service.ServicePrincipalsServiceListServicePrincipalsParams, runtime.ClientAuthInfoWriter, ...service_principals_service.ClientOption) error); ok {
		r1 = rf(params, authInfo, opts...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// MockClientService_ServicePrincipalsServiceListServicePrincipals_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ServicePrincipalsServiceListServicePrincipals'
type MockClientService_ServicePrincipalsServiceListServicePrincipals_Call struct {
	*mock.Call
}

// ServicePrincipalsServiceListServicePrincipals is a helper method to define mock.On call
//   - params *service_principals_service.ServicePrincipalsServiceListServicePrincipalsParams
//   - authInfo runtime.ClientAuthInfoWriter
//   - opts ...service_principals_service.ClientOption
func (_e *MockClientService_Expecter) ServicePrincipalsServiceListServicePrincipals(params interface{}, authInfo interface{}, opts ...interface{}) *MockClientService_ServicePrincipalsServiceListServicePrincipals_Call {
	return &MockClientService_ServicePrincipalsServiceListServicePrincipals_Call{Call: _e.mock.On("ServicePrincipalsServiceListServicePrincipals",
		append([]interface{}{params, authInfo}, opts...)...)}
}

func (_c *MockClientService_ServicePrincipalsServiceListServicePrincipals_Call) Run(run func(params *service_principals_service.ServicePrincipalsServiceListServicePrincipalsParams, authInfo runtime.ClientAuthInfoWriter, opts ...service_principals_service.ClientOption)) *MockClientService_ServicePrincipalsServiceListServicePrincipals_Call {
	_c.Call.Run(func(args mock.Arguments) {
		variadicArgs := make([]service_principals_service.ClientOption, len(args)-2)
		for i, a := range args[2:] {
			if a != nil {
				variadicArgs[i] = a.(service_principals_service.ClientOption)
			}
		}
		run(args[0].(*service_principals_service.ServicePrincipalsServiceListServicePrincipalsParams), args[1].(runtime.ClientAuthInfoWriter), variadicArgs...)
	})
	return _c
}

func (_c *MockClientService_ServicePrincipalsServiceListServicePrincipals_Call) Return(_a0 *service_principals_service.ServicePrincipalsServiceListServicePrincipalsOK, _a1 error) *MockClientService_ServicePrincipalsServiceListServicePrincipals_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockClientService_ServicePrincipalsServiceListServicePrincipals_Call) RunAndReturn(run func(*service_principals_service.ServicePrincipalsServiceListServicePrincipalsParams, runtime.ClientAuthInfoWriter, ...service_principals_service.ClientOption) (*service_principals_service.ServicePrincipalsServiceListServicePrincipalsOK, error)) *MockClientService_ServicePrincipalsServiceListServicePrincipals_Call {
	_c.Call.Return(run)
	return _c
}

// ServicePrincipalsServiceListServicePrincipals2 provides a mock function with given fields: params, authInfo, opts
func (_m *MockClientService) ServicePrincipalsServiceListServicePrincipals2(params *service_principals_service.ServicePrincipalsServiceListServicePrincipals2Params, authInfo runtime.ClientAuthInfoWriter, opts ...service_principals_service.ClientOption) (*service_principals_service.ServicePrincipalsServiceListServicePrincipals2OK, error) {
	_va := make([]interface{}, len(opts))
	for _i := range opts {
		_va[_i] = opts[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, params, authInfo)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for ServicePrincipalsServiceListServicePrincipals2")
	}

	var r0 *service_principals_service.ServicePrincipalsServiceListServicePrincipals2OK
	var r1 error
	if rf, ok := ret.Get(0).(func(*service_principals_service.ServicePrincipalsServiceListServicePrincipals2Params, runtime.ClientAuthInfoWriter, ...service_principals_service.ClientOption) (*service_principals_service.ServicePrincipalsServiceListServicePrincipals2OK, error)); ok {
		return rf(params, authInfo, opts...)
	}
	if rf, ok := ret.Get(0).(func(*service_principals_service.ServicePrincipalsServiceListServicePrincipals2Params, runtime.ClientAuthInfoWriter, ...service_principals_service.ClientOption) *service_principals_service.ServicePrincipalsServiceListServicePrincipals2OK); ok {
		r0 = rf(params, authInfo, opts...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*service_principals_service.ServicePrincipalsServiceListServicePrincipals2OK)
		}
	}

	if rf, ok := ret.Get(1).(func(*service_principals_service.ServicePrincipalsServiceListServicePrincipals2Params, runtime.ClientAuthInfoWriter, ...service_principals_service.ClientOption) error); ok {
		r1 = rf(params, authInfo, opts...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// MockClientService_ServicePrincipalsServiceListServicePrincipals2_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ServicePrincipalsServiceListServicePrincipals2'
type MockClientService_ServicePrincipalsServiceListServicePrincipals2_Call struct {
	*mock.Call
}

// ServicePrincipalsServiceListServicePrincipals2 is a helper method to define mock.On call
//   - params *service_principals_service.ServicePrincipalsServiceListServicePrincipals2Params
//   - authInfo runtime.ClientAuthInfoWriter
//   - opts ...service_principals_service.ClientOption
func (_e *MockClientService_Expecter) ServicePrincipalsServiceListServicePrincipals2(params interface{}, authInfo interface{}, opts ...interface{}) *MockClientService_ServicePrincipalsServiceListServicePrincipals2_Call {
	return &MockClientService_ServicePrincipalsServiceListServicePrincipals2_Call{Call: _e.mock.On("ServicePrincipalsServiceListServicePrincipals2",
		append([]interface{}{params, authInfo}, opts...)...)}
}

func (_c *MockClientService_ServicePrincipalsServiceListServicePrincipals2_Call) Run(run func(params *service_principals_service.ServicePrincipalsServiceListServicePrincipals2Params, authInfo runtime.ClientAuthInfoWriter, opts ...service_principals_service.ClientOption)) *MockClientService_ServicePrincipalsServiceListServicePrincipals2_Call {
	_c.Call.Run(func(args mock.Arguments) {
		variadicArgs := make([]service_principals_service.ClientOption, len(args)-2)
		for i, a := range args[2:] {
			if a != nil {
				variadicArgs[i] = a.(service_principals_service.ClientOption)
			}
		}
		run(args[0].(*service_principals_service.ServicePrincipalsServiceListServicePrincipals2Params), args[1].(runtime.ClientAuthInfoWriter), variadicArgs...)
	})
	return _c
}

func (_c *MockClientService_ServicePrincipalsServiceListServicePrincipals2_Call) Return(_a0 *service_principals_service.ServicePrincipalsServiceListServicePrincipals2OK, _a1 error) *MockClientService_ServicePrincipalsServiceListServicePrincipals2_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockClientService_ServicePrincipalsServiceListServicePrincipals2_Call) RunAndReturn(run func(*service_principals_service.ServicePrincipalsServiceListServicePrincipals2Params, runtime.ClientAuthInfoWriter, ...service_principals_service.ClientOption) (*service_principals_service.ServicePrincipalsServiceListServicePrincipals2OK, error)) *MockClientService_ServicePrincipalsServiceListServicePrincipals2_Call {
	_c.Call.Return(run)
	return _c
}

// ServicePrincipalsServiceListWorkloadIdentityProvider provides a mock function with given fields: params, authInfo, opts
func (_m *MockClientService) ServicePrincipalsServiceListWorkloadIdentityProvider(params *service_principals_service.ServicePrincipalsServiceListWorkloadIdentityProviderParams, authInfo runtime.ClientAuthInfoWriter, opts ...service_principals_service.ClientOption) (*service_principals_service.ServicePrincipalsServiceListWorkloadIdentityProviderOK, error) {
	_va := make([]interface{}, len(opts))
	for _i := range opts {
		_va[_i] = opts[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, params, authInfo)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for ServicePrincipalsServiceListWorkloadIdentityProvider")
	}

	var r0 *service_principals_service.ServicePrincipalsServiceListWorkloadIdentityProviderOK
	var r1 error
	if rf, ok := ret.Get(0).(func(*service_principals_service.ServicePrincipalsServiceListWorkloadIdentityProviderParams, runtime.ClientAuthInfoWriter, ...service_principals_service.ClientOption) (*service_principals_service.ServicePrincipalsServiceListWorkloadIdentityProviderOK, error)); ok {
		return rf(params, authInfo, opts...)
	}
	if rf, ok := ret.Get(0).(func(*service_principals_service.ServicePrincipalsServiceListWorkloadIdentityProviderParams, runtime.ClientAuthInfoWriter, ...service_principals_service.ClientOption) *service_principals_service.ServicePrincipalsServiceListWorkloadIdentityProviderOK); ok {
		r0 = rf(params, authInfo, opts...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*service_principals_service.ServicePrincipalsServiceListWorkloadIdentityProviderOK)
		}
	}

	if rf, ok := ret.Get(1).(func(*service_principals_service.ServicePrincipalsServiceListWorkloadIdentityProviderParams, runtime.ClientAuthInfoWriter, ...service_principals_service.ClientOption) error); ok {
		r1 = rf(params, authInfo, opts...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// MockClientService_ServicePrincipalsServiceListWorkloadIdentityProvider_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ServicePrincipalsServiceListWorkloadIdentityProvider'
type MockClientService_ServicePrincipalsServiceListWorkloadIdentityProvider_Call struct {
	*mock.Call
}

// ServicePrincipalsServiceListWorkloadIdentityProvider is a helper method to define mock.On call
//   - params *service_principals_service.ServicePrincipalsServiceListWorkloadIdentityProviderParams
//   - authInfo runtime.ClientAuthInfoWriter
//   - opts ...service_principals_service.ClientOption
func (_e *MockClientService_Expecter) ServicePrincipalsServiceListWorkloadIdentityProvider(params interface{}, authInfo interface{}, opts ...interface{}) *MockClientService_ServicePrincipalsServiceListWorkloadIdentityProvider_Call {
	return &MockClientService_ServicePrincipalsServiceListWorkloadIdentityProvider_Call{Call: _e.mock.On("ServicePrincipalsServiceListWorkloadIdentityProvider",
		append([]interface{}{params, authInfo}, opts...)...)}
}

func (_c *MockClientService_ServicePrincipalsServiceListWorkloadIdentityProvider_Call) Run(run func(params *service_principals_service.ServicePrincipalsServiceListWorkloadIdentityProviderParams, authInfo runtime.ClientAuthInfoWriter, opts ...service_principals_service.ClientOption)) *MockClientService_ServicePrincipalsServiceListWorkloadIdentityProvider_Call {
	_c.Call.Run(func(args mock.Arguments) {
		variadicArgs := make([]service_principals_service.ClientOption, len(args)-2)
		for i, a := range args[2:] {
			if a != nil {
				variadicArgs[i] = a.(service_principals_service.ClientOption)
			}
		}
		run(args[0].(*service_principals_service.ServicePrincipalsServiceListWorkloadIdentityProviderParams), args[1].(runtime.ClientAuthInfoWriter), variadicArgs...)
	})
	return _c
}

func (_c *MockClientService_ServicePrincipalsServiceListWorkloadIdentityProvider_Call) Return(_a0 *service_principals_service.ServicePrincipalsServiceListWorkloadIdentityProviderOK, _a1 error) *MockClientService_ServicePrincipalsServiceListWorkloadIdentityProvider_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockClientService_ServicePrincipalsServiceListWorkloadIdentityProvider_Call) RunAndReturn(run func(*service_principals_service.ServicePrincipalsServiceListWorkloadIdentityProviderParams, runtime.ClientAuthInfoWriter, ...service_principals_service.ClientOption) (*service_principals_service.ServicePrincipalsServiceListWorkloadIdentityProviderOK, error)) *MockClientService_ServicePrincipalsServiceListWorkloadIdentityProvider_Call {
	_c.Call.Return(run)
	return _c
}

// ServicePrincipalsServiceUpdateWorkloadIdentityProvider provides a mock function with given fields: params, authInfo, opts
func (_m *MockClientService) ServicePrincipalsServiceUpdateWorkloadIdentityProvider(params *service_principals_service.ServicePrincipalsServiceUpdateWorkloadIdentityProviderParams, authInfo runtime.ClientAuthInfoWriter, opts ...service_principals_service.ClientOption) (*service_principals_service.ServicePrincipalsServiceUpdateWorkloadIdentityProviderOK, error) {
	_va := make([]interface{}, len(opts))
	for _i := range opts {
		_va[_i] = opts[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, params, authInfo)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for ServicePrincipalsServiceUpdateWorkloadIdentityProvider")
	}

	var r0 *service_principals_service.ServicePrincipalsServiceUpdateWorkloadIdentityProviderOK
	var r1 error
	if rf, ok := ret.Get(0).(func(*service_principals_service.ServicePrincipalsServiceUpdateWorkloadIdentityProviderParams, runtime.ClientAuthInfoWriter, ...service_principals_service.ClientOption) (*service_principals_service.ServicePrincipalsServiceUpdateWorkloadIdentityProviderOK, error)); ok {
		return rf(params, authInfo, opts...)
	}
	if rf, ok := ret.Get(0).(func(*service_principals_service.ServicePrincipalsServiceUpdateWorkloadIdentityProviderParams, runtime.ClientAuthInfoWriter, ...service_principals_service.ClientOption) *service_principals_service.ServicePrincipalsServiceUpdateWorkloadIdentityProviderOK); ok {
		r0 = rf(params, authInfo, opts...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*service_principals_service.ServicePrincipalsServiceUpdateWorkloadIdentityProviderOK)
		}
	}

	if rf, ok := ret.Get(1).(func(*service_principals_service.ServicePrincipalsServiceUpdateWorkloadIdentityProviderParams, runtime.ClientAuthInfoWriter, ...service_principals_service.ClientOption) error); ok {
		r1 = rf(params, authInfo, opts...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// MockClientService_ServicePrincipalsServiceUpdateWorkloadIdentityProvider_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ServicePrincipalsServiceUpdateWorkloadIdentityProvider'
type MockClientService_ServicePrincipalsServiceUpdateWorkloadIdentityProvider_Call struct {
	*mock.Call
}

// ServicePrincipalsServiceUpdateWorkloadIdentityProvider is a helper method to define mock.On call
//   - params *service_principals_service.ServicePrincipalsServiceUpdateWorkloadIdentityProviderParams
//   - authInfo runtime.ClientAuthInfoWriter
//   - opts ...service_principals_service.ClientOption
func (_e *MockClientService_Expecter) ServicePrincipalsServiceUpdateWorkloadIdentityProvider(params interface{}, authInfo interface{}, opts ...interface{}) *MockClientService_ServicePrincipalsServiceUpdateWorkloadIdentityProvider_Call {
	return &MockClientService_ServicePrincipalsServiceUpdateWorkloadIdentityProvider_Call{Call: _e.mock.On("ServicePrincipalsServiceUpdateWorkloadIdentityProvider",
		append([]interface{}{params, authInfo}, opts...)...)}
}

func (_c *MockClientService_ServicePrincipalsServiceUpdateWorkloadIdentityProvider_Call) Run(run func(params *service_principals_service.ServicePrincipalsServiceUpdateWorkloadIdentityProviderParams, authInfo runtime.ClientAuthInfoWriter, opts ...service_principals_service.ClientOption)) *MockClientService_ServicePrincipalsServiceUpdateWorkloadIdentityProvider_Call {
	_c.Call.Run(func(args mock.Arguments) {
		variadicArgs := make([]service_principals_service.ClientOption, len(args)-2)
		for i, a := range args[2:] {
			if a != nil {
				variadicArgs[i] = a.(service_principals_service.ClientOption)
			}
		}
		run(args[0].(*service_principals_service.ServicePrincipalsServiceUpdateWorkloadIdentityProviderParams), args[1].(runtime.ClientAuthInfoWriter), variadicArgs...)
	})
	return _c
}

func (_c *MockClientService_ServicePrincipalsServiceUpdateWorkloadIdentityProvider_Call) Return(_a0 *service_principals_service.ServicePrincipalsServiceUpdateWorkloadIdentityProviderOK, _a1 error) *MockClientService_ServicePrincipalsServiceUpdateWorkloadIdentityProvider_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockClientService_ServicePrincipalsServiceUpdateWorkloadIdentityProvider_Call) RunAndReturn(run func(*service_principals_service.ServicePrincipalsServiceUpdateWorkloadIdentityProviderParams, runtime.ClientAuthInfoWriter, ...service_principals_service.ClientOption) (*service_principals_service.ServicePrincipalsServiceUpdateWorkloadIdentityProviderOK, error)) *MockClientService_ServicePrincipalsServiceUpdateWorkloadIdentityProvider_Call {
	_c.Call.Return(run)
	return _c
}

// SetTransport provides a mock function with given fields: transport
func (_m *MockClientService) SetTransport(transport runtime.ClientTransport) {
	_m.Called(transport)
}

// MockClientService_SetTransport_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'SetTransport'
type MockClientService_SetTransport_Call struct {
	*mock.Call
}

// SetTransport is a helper method to define mock.On call
//   - transport runtime.ClientTransport
func (_e *MockClientService_Expecter) SetTransport(transport interface{}) *MockClientService_SetTransport_Call {
	return &MockClientService_SetTransport_Call{Call: _e.mock.On("SetTransport", transport)}
}

func (_c *MockClientService_SetTransport_Call) Run(run func(transport runtime.ClientTransport)) *MockClientService_SetTransport_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(runtime.ClientTransport))
	})
	return _c
}

func (_c *MockClientService_SetTransport_Call) Return() *MockClientService_SetTransport_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockClientService_SetTransport_Call) RunAndReturn(run func(runtime.ClientTransport)) *MockClientService_SetTransport_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockClientService creates a new instance of MockClientService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockClientService(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockClientService {
	mock := &MockClientService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
